{"version":3,"sources":["containers/StatisticsView/StatisticsView.style.ts","containers/StatisticsView/StatisticsView.tsx","containers/StatisticsView/index.ts","components/helmet/index.ts","components/helmet/Helmet.tsx"],"names":["StyledStatistic","styled","Statistic","props","transparentize","theme","palette","background","connect","state","stats","Midgard","networkInfo","getUSDPriceLabel","usePrice","bondingAPYLabel","bnOrZero","bondingAPY","multipliedBy","toFixed","liquidityAPYLabel","liquidityAPY","statsData","React","useMemo","title","value","totalStaked","totalDepth","totalEarned","totalVolume","totalVolume24hr","poolCount","totalStakeTx","totalTx","dailyTx","monthlyTx","totalUsers","dailyActiveUsers","monthlyActiveUsers","totalAssetBuys","totalAssetSells","totalWithdrawTx","gutter","content","map","statProps","index","key","xs","span","sm","md","lg","xl","StatisticsView","Helmet","name"],"mappings":"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","file":"static/js/27.75f98bb4.chunk.js","sourcesContent":["import { Statistic } from 'antd';\r\nimport { transparentize } from 'polished';\r\nimport styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nexport const StyledStatistic = styled(Statistic)`\r\n  background: ${props => transparentize(0.1, props.theme.palette.background[0])};\r\n  border: 1px solid ${palette('gray', 0)};\r\n\r\n  text-transform: uppercase;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  height: 79px;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 6px;\r\n    height: 79px;\r\n    left: 8px;\r\n    top: 8px;\r\n    border-bottom-left-radius: 3px;\r\n    border-top-left-radius: 3px;\r\n    background: ${palette('gradient', 0)};\r\n  }\r\n\r\n  .ant-statistic-title {\r\n    color: ${palette('text', 1)};\r\n    font-size: 14px;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ant-statistic-content {\r\n    margin-top: 12px;\r\n    display: flex;\r\n\r\n    span {\r\n      color: ${palette('text', 0)};\r\n      font-family: 'Exo 2';\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { bnOrZero } from '@thorchain/asgardex-util';\r\nimport { Row, Col } from 'antd';\r\n\r\n\r\nimport Helmet from 'components/helmet';\r\n\r\nimport { RootState } from 'redux/store';\r\n\r\nimport usePrice from 'hooks/usePrice';\r\n\r\nimport { StatsData, NetworkInfo } from 'types/generated/midgard';\r\n\r\nimport { StyledStatistic } from './StatisticsView.style';\r\n\r\ntype Props = {\r\n  stats: StatsData;\r\n  networkInfo: NetworkInfo;\r\n};\r\n\r\nconst StatisticsView: React.FC<Props> = (props: Props): JSX.Element => {\r\n  const { stats, networkInfo } = props;\r\n\r\n  const { getUSDPriceLabel } = usePrice();\r\n\r\n  const bondingAPYLabel = bnOrZero(networkInfo?.bondingAPY)\r\n    .multipliedBy(100)\r\n    .toFixed(2);\r\n  const liquidityAPYLabel = bnOrZero(networkInfo?.liquidityAPY)\r\n    .multipliedBy(100)\r\n    .toFixed(2);\r\n\r\n  const statsData = React.useMemo(() => {\r\n    return [\r\n      {\r\n        title: 'Total Pooled',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalStaked)),\r\n      },\r\n      {\r\n        title: 'Total Depth',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalDepth)),\r\n      },\r\n      {\r\n        title: 'Total Earned',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalEarned)),\r\n      },\r\n      {\r\n        title: 'Total Volume',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalVolume)),\r\n      },\r\n      {\r\n        title: '24HR Volume',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalVolume24hr)),\r\n      },\r\n      {\r\n        title: 'Pool Count',\r\n        value: stats?.poolCount ?? '0',\r\n      },\r\n      {\r\n        title: 'Total Pooled Tx',\r\n        value: stats?.totalStakeTx ?? '0',\r\n      },\r\n      {\r\n        title: 'Total Tx',\r\n        value: stats?.totalTx ?? '0',\r\n      },\r\n      {\r\n        title: 'Daily Tx',\r\n        value: stats?.dailyTx ?? '0',\r\n      },\r\n      {\r\n        title: 'Monthly Tx',\r\n        value: stats?.monthlyTx ?? '0',\r\n      },\r\n      {\r\n        title: 'Total Users',\r\n        value: stats?.totalUsers ?? '0',\r\n      },\r\n      {\r\n        title: 'Daily Active Users',\r\n        value: stats?.dailyActiveUsers ?? '0',\r\n      },\r\n      {\r\n        title: 'Monthly Active Users',\r\n        value: stats?.monthlyActiveUsers ?? '0',\r\n      },\r\n      {\r\n        title: 'Total Asset Buys',\r\n        value: stats?.totalAssetBuys ?? '0',\r\n      },\r\n      {\r\n        title: 'Total Asset Sells',\r\n        value: stats?.totalAssetSells ?? '0',\r\n      },\r\n      {\r\n        title: 'Total Withdraw Tx',\r\n        value: stats?.totalWithdrawTx ?? '0',\r\n      },\r\n      {\r\n        title: 'Bonding APY',\r\n        value: `${bondingAPYLabel} %`,\r\n      },\r\n      {\r\n        title: 'Liquidity APY',\r\n        value: `${liquidityAPYLabel} %`,\r\n      },\r\n    ];\r\n  }, [stats, bondingAPYLabel, liquidityAPYLabel, getUSDPriceLabel]);\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      <Helmet title=\"Stats\" content=\"Stats\" />\r\n      {statsData.map((statProps, index) => {\r\n        return (\r\n          <Col\r\n            key={index}\r\n            xs={{ span: 24 }}\r\n            sm={{ span: 12 }}\r\n            md={{ span: 8 }}\r\n            lg={{ span: 8 }}\r\n            xl={{ span: 4 }}\r\n          >\r\n            <StyledStatistic {...statProps} />\r\n          </Col>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default connect((state: RootState) => ({\r\n  stats: state.Midgard.stats,\r\n  networkInfo: state.Midgard.networkInfo,\r\n}))(StatisticsView);\r\n","import StatisticsView from './StatisticsView';\r\n\r\nexport default StatisticsView;\r\n","import Helmet from './Helmet';\r\n\r\nexport default Helmet;\r\n","import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport default ({ title, content }: { title: string, content: string }) => (\r\n  <Helmet>\r\n    <title>{title}</title>\r\n    <meta name=\"description\" content={content} />\r\n  </Helmet>\r\n);\r\n"],"sourceRoot":""}