{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/CheckCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/FieldTimeOutlined.js","../node_modules/@ant-design/icons/es/icons/FieldTimeOutlined.js","components/poolFilter/poolFilter.style.ts","components/poolFilter/index.ts","components/poolFilter/poolFilter.tsx","components/uielements/addIcon/addIcon.style.js","components/uielements/addIcon/index.js","components/uielements/addIcon/addIcon.js","containers/PoolView/ChartView.tsx","containers/PoolView/PoolView.style.ts","containers/PoolView/PoolView.tsx","containers/PoolView/index.ts","components/helmet/index.ts","components/helmet/Helmet.tsx","components/uielements/input/input.style.js","components/uielements/input/input.js","components/uielements/input/index.js","components/utility/contentView/contentView.style.js","components/utility/contentView/contentView.js","components/utility/contentView/index.js","components/uielements/table/table.style.js","components/uielements/table/table.js","components/uielements/table/index.js","components/utility/loaders/label/labelLoader.tsx","components/utility/loaders/label/index.ts","assets/SVG/asset-arrow-blacksmall.svg","assets/SVG/asset-arrow-green-dash.svg","assets/SVG/asset-arrow-green.svg","assets/SVG/asset-arrow-grey.svg","assets/SVG/asset-arrow-twoway.svg","assets/SVG/asset-arrow-yello.svg","assets/SVG/asset-code-icon.svg","assets/SVG/asset-dropdown.svg","assets/SVG/asset-market.svg","assets/SVG/asset-refresh.svg","assets/SVG/asset-user.svg","assets/SVG/bitcoin-icon.svg","assets/SVG/currency-icon.svg","assets/SVG/icon-arrow-button.svg","assets/SVG/orb-blue.svg","assets/SVG/orb-green.svg","components/icons/index.ts","../node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","../node_modules/@ant-design/icons/es/icons/SearchOutlined.js","components/utility/loaders/chart/chartLoader.tsx","components/utility/loaders/chart/index.ts","components/chart/chart.style.ts","components/chart/utils.ts","components/chart/chart.tsx","components/chart/index.ts","components/statBar/statBar.style.ts","components/statBar/poolStatBar.tsx","components/statBar/statBar.tsx","components/statBar/index.ts","components/transaction/txTable/txTable.style.ts","components/transaction/txTable/txTable.tsx","components/transaction/txTable/index.ts"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","PoolFilterWrapper","styled","div","PoolFilter","palette","InfoCircleOutlined","selected","onClick","handleClick","useCallback","key","className","typevalue","round","PoolDetailStatusEnum","Enabled","focused","Bootstrapped","tooltip","IconWrapper","AddIcon","otherProps","this","Component","ChartView","dispatch","useDispatch","isDesktopView","Grid","useBreakpoint","md","useEffect","getRTStats","useState","selectedChartVolume","setSelectedChartVolume","selectedChartLiquidity","setSelectedChartLiquidity","volumeChartIndexes","useMemo","liquidityChartIndexes","useSelector","state","Midgard","rtStats","rtStatsLoading","usePrice","getUSDPrice","hasBUSDPrice","chartValueUnit","initialChartData","initialData","defaultChartValues","allTime","week","forEach","chartIndex","values","loading","chartData","allTimeData","weekData","allTimeVolumeData","weekVolumeData","allTimeLiquidityData","weekLiquidityData","allTimeTotalPooledData","weekTotalPooledData","allTimeTotalSwapsData","weekTotalSwapsData","allTimeTotalAddData","weekTotalAddData","allTimeTotalWithdrawData","weekTotalWithdrawData","getChartData","data","time","volume","value","bnOrZero","totalVolume","totalPooled","formatBaseAsTokenAmount","baseAmount","totalRuneDepth","liquidity","multipliedBy","buyCount","sellCount","totalSwaps","String","totalAdd","stakeCount","totalWithdraw","withdrawCount","push","Volume","unit","Swap","Add","Withdraw","Liquidity","type","Pooled","gutter","xs","chartIndexes","selectedIndex","selectChart","ContentWrapper","ContentView","media","sm","StyledTable","Table","PoolViewTools","PoolSearchWrapper","ActionHeader","ActionColumn","compose","connect","tokenList","Binance","pools","poolData","stats","statsLoading","poolLoading","poolDataLoading","assetData","Wallet","user","networkInfo","networkInfoLoading","getPools","midgardActions","withRouter","poolStatus","selectPoolStatus","keyword","setKeyword","history","useHistory","reducedPricePrefix","priceIndex","isValidPool","useMidgard","useNetwork","isValidFundCaps","statusColor","isOutboundDelayed","getOutboundBusyTooltip","handleSelectPoolStatus","status","onChangeKeywordHandler","e","target","handleRefresh","renderTextCell","text","renderCell","withOutboundTooltip","Popover","buttonCol","title","color","SyncOutlined","render","record","swapUrl","RUNE_SYMBOL","symbol","liquidityUrl","toUpperCase","to","ev","stopPropagation","style","margin","DatabaseOutlined","SwapOutlined","mobileColumns","dataIndex","display","justifyContent","size","sorter","a","b","poolPrice","minus","sortDirections","depth","amount","defaultSortOrder","volume24","desktopColumns","_","tokenName","getTokenName","localeCompare","Number","apy","poolViewData","map","poolName","index","getAssetFromString","poolInfo","poolDataDetail","getPoolData","filteredData","filter","poolItem","tokenSymbol","toLowerCase","includes","columns","renderPoolTable","onRow","URL","dataSource","rowKey","content","showNotification","message","description","weight","prefix","SearchOutlined","sizevalue","placeholder","onChange","PoolView","Helmet","name","fontSettings","small","spacing","normal","big","sizes","colors","primary","success","warning","error","InputWrapper","Input","defaultProps","ContentViewWrapper","transparent","children","TableWrapper","sizeValue","transparentize","theme","background","darken","lg","pagination","LabelLoader","App","themeType","ThemeType","LIGHT","themes","light","dark","backgroundColor","foregroundColor","gray","height","width","speed","x","y","rx","ry","_extends","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","x1","y1","x2","y2","stroke","strokeWidth","_ref4","_ref5","_ref6","_ref7","strokeLinecap","SvgAssetCodeIcon","_ref","svgRef","viewBox","ForwardRef","d","fill","SvgBitcoinIcon","id","enableBackground","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","SvgCurrencyIcon","xmlSpace","gradientUnits","gradientTransform","offset","stopColor","LoaderWrapper","ChartLoader","ChartContainer","gradientStart","gradientStop","HeaderContainer","TypeContainer","TimeContainer","HeaderToggle","span","ChartWrapper","LineChart","Line","BarChart","Bar","ComingSoonWrapper","ComingSoonText","p","BlurWrapper","isBlur","getRandomChartData","randomSeries","minValue","maxValue","series","itr","moment","subtract","isBefore","now","add","unix","random","toString","generateRandomTimeSeries","labels","format","split","join","getDisplayData","canvas","gradientStroke","ctx","getContext","createLinearGradient","addColorStop","datasets","lineTension","borderColor","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","borderWidth","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","defaults","global","defaultFontSize","defaultFontStyle","DefaultChart","React","memo","chartTimeframe","setChartTimeframe","isLight","backgroundGradientStart","backgroundGradientStop","randomData","selectedChartData","isComingSoonChart","comingSoon","isChartLoading","selectedChartType","selectedChartValues","filteredByTime","getData","getRandomSeries","options","maintainAspectRatio","legend","layout","padding","left","right","top","bottom","animation","duration","tooltips","titleFontSize","bodyFontSize","callbacks","label","yLabel","abbreviateNumber","Intl","NumberFormat","Math","floor","scales","xAxes","gridLines","ticks","fontSize","fontColor","maxTicksLimit","autoSkipPadding","maxRotation","callback","yAxes","stacked","autoSkip","renderComingSoonChart","Chart","StyledStatistic","Statistic","Statistics","getReducedPriceLabel","liquidityValue","poolDepth","poolVolume24hr","transaction","swappingTxCount","stakingTxCount","earning","poolEarned","totalStakers","poolAPY","poolAPYLabel","toFixed","totalPoolFee","poolFeesTotal","poolStats","statsProp","xl","formatter","getUSDPriceLabel","bondingAPYLabel","bondingAPY","liquidityAPYLabel","liquidityAPY","totalVolume24hr","totalUsers","totalEarned","statsProps","StatBar","StyledText","Label","StyledLink","StyledLinkText","TransactionWrapper","StyledPagination","Pagination","tags","swap","stake","unstake","doubleSwap","refund","rewards","pool","gas","TxTable","address","txId","asset","limit","TX_PUBLIC_PAGE_LIMIT","txData","txRefreshing","_tag","currentTxPage","setCurrentTxPage","getTx","prevRefreshTxStatus","usePrevious","truncateAddress","first","substr","last","getColumnRenderer","row","in","TxDetailsTypeEnum","Unstake","txID","coins","inData","txDetail","assetValue","ticker","amountValue","href","BINANCE_TX_BASE_URL","rel","LinkOutlined","out","Stake","concat","outData","date","fromNow","columnRenders","addressColumn","align","dateColumn","typeColumn","inColumn","outColumn","count","txs","defaultCurrent","current","total","showSizeChanger"],"mappings":"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","file":"static/js/6.4b0cafae.chunk.js","sourcesContent":["// This icon file is generated automatically.\n// tslint:disable\nvar CheckCircleOutlined = {\n  \"name\": \"check-circle\",\n  \"theme\": \"outlined\",\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\"\n      }\n    }, {\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\"\n      }\n    }]\n  }\n};\nexport default CheckCircleOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckCircleOutlined = function CheckCircleOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CheckCircleOutlinedSvg\n  }));\n};\n\nCheckCircleOutlined.displayName = 'CheckCircleOutlined';\nexport default React.forwardRef(CheckCircleOutlined);","// This icon file is generated automatically.\n// tslint:disable\nvar FieldTimeOutlined = {\n  \"name\": \"field-time\",\n  \"theme\": \"outlined\",\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"defs\",\n      \"attrs\": {},\n      \"children\": [{\n        \"tag\": \"style\",\n        \"attrs\": {}\n      }]\n    }, {\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M945 412H689c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h256c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM811 548H689c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h122c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM477.3 322.5H434c-6.2 0-11.2 5-11.2 11.2v248c0 3.6 1.7 6.9 4.6 9l148.9 108.6c5 3.6 12 2.6 15.6-2.4l25.7-35.1v-.1c3.6-5 2.5-12-2.5-15.6l-126.7-91.6V333.7c.1-6.2-5-11.2-11.1-11.2z\"\n      }\n    }, {\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M804.8 673.9H747c-5.6 0-10.9 2.9-13.9 7.7a321 321 0 01-44.5 55.7 317.17 317.17 0 01-101.3 68.3c-39.3 16.6-81 25-124 25-43.1 0-84.8-8.4-124-25-37.9-16-72-39-101.3-68.3s-52.3-63.4-68.3-101.3c-16.6-39.2-25-80.9-25-124 0-43.1 8.4-84.7 25-124 16-37.9 39-72 68.3-101.3 29.3-29.3 63.4-52.3 101.3-68.3 39.2-16.6 81-25 124-25 43.1 0 84.8 8.4 124 25 37.9 16 72 39 101.3 68.3a321 321 0 0144.5 55.7c3 4.8 8.3 7.7 13.9 7.7h57.8c6.9 0 11.3-7.2 8.2-13.3-65.2-129.7-197.4-214-345-215.7-216.1-2.7-395.6 174.2-396 390.1C71.6 727.5 246.9 903 463.2 903c149.5 0 283.9-84.6 349.8-215.8a9.18 9.18 0 00-8.2-13.3z\"\n      }\n    }]\n  }\n};\nexport default FieldTimeOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FieldTimeOutlinedSvg from \"@ant-design/icons-svg/es/asn/FieldTimeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FieldTimeOutlined = function FieldTimeOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: FieldTimeOutlinedSvg\n  }));\n};\n\nFieldTimeOutlined.displayName = 'FieldTimeOutlined';\nexport default React.forwardRef(FieldTimeOutlined);","import { InfoCircleOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nexport const PoolFilterWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  button {\r\n    &:first-child {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PopoverContent = styled.div`\r\n  z-index: 9999;\r\n  width: 300px;\r\n  font-size: '11px';\r\n  color: ${palette('text', 0)};\r\n`;\r\n\r\nexport const PopoverIcon = styled(InfoCircleOutlined)`\r\n  color: ${palette('primary', 0)};\r\n  margin: 0 10px;\r\n`;\r\n","import PoolFilter from './poolFilter';\r\n\r\nexport default PoolFilter;\r\n","/* eslint-disable react/no-unescaped-entities */\r\nimport React, { useCallback } from 'react';\r\n\r\nimport { CheckCircleOutlined, FieldTimeOutlined } from '@ant-design/icons';\r\n\r\nimport { PoolDetailStatusEnum } from 'types/generated/midgard/api';\r\n\r\nimport Button from '../uielements/button';\r\nimport { TooltipIcon } from '../uielements/Popover';\r\nimport {\r\n  PoolFilterWrapper,\r\n} from './poolFilter.style';\r\n\r\ntype Props = {\r\n  selected: PoolDetailStatusEnum;\r\n  onClick: (key: PoolDetailStatusEnum) => void;\r\n};\r\n\r\nconst PoolFilter: React.FC<Props> = (props: Props): JSX.Element => {\r\n  const { selected, onClick } = props;\r\n\r\n  const handleClick = useCallback(\r\n    (key: PoolDetailStatusEnum) => {\r\n      onClick(key);\r\n    },\r\n    [onClick],\r\n  );\r\n\r\n  return (\r\n    <PoolFilterWrapper className=\"pool-filter\">\r\n      <Button\r\n        typevalue=\"outline\"\r\n        round=\"true\"\r\n        onClick={() => handleClick(PoolDetailStatusEnum.Enabled)}\r\n        focused={selected === PoolDetailStatusEnum.Enabled}\r\n      >\r\n        <CheckCircleOutlined />\r\n        Active\r\n      </Button>\r\n      <Button\r\n        typevalue=\"outline\"\r\n        round=\"true\"\r\n        onClick={() => handleClick(PoolDetailStatusEnum.Bootstrapped)}\r\n        focused={selected === PoolDetailStatusEnum.Bootstrapped}\r\n      >\r\n        <FieldTimeOutlined />\r\n        Pending\r\n      </Button>\r\n      <TooltipIcon tooltip=\"Pools don't immediately become enabled on THORChain and must participate\r\n      in a liquidity competition to become enabled. Every 50k blocks (approx 3\r\n      days), the pool with the most liquidity wins & becomes enabled. During\r\n      this time swapping is disabled but liquidity can be added & withdrawn.\"\r\n      />\r\n    </PoolFilterWrapper>\r\n  );\r\n};\r\n\r\nexport default PoolFilter;\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nexport const IconWrapper = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: ${palette('text', 3)};\r\n  background: ${palette('primary', 0)};\r\n  cursor: pointer;\r\n\r\n  span {\r\n    position: relative;\r\n    top: -7px;\r\n    left: 5px;\r\n    font-size: 20px;\r\n    &::selection {\r\n      background-color: transparent;\r\n      color: ${palette('text', 3)};\r\n    }\r\n  }\r\n`;\r\n","import AddIcon from './addIcon';\r\n\r\nexport default AddIcon;\r\n","import React, { Component } from 'react';\r\n\r\nimport { IconWrapper } from './addIcon.style';\r\n\r\nclass AddIcon extends Component {\r\n  render() {\r\n    const { ...otherProps } = this.props;\r\n    return (\r\n      <IconWrapper {...otherProps}>\r\n        <span>+</span>\r\n      </IconWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddIcon;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { formatBaseAsTokenAmount, baseAmount } from '@thorchain/asgardex-token';\r\nimport { bnOrZero } from '@thorchain/asgardex-util';\r\nimport { Grid, Row, Col } from 'antd';\r\n\r\nimport Chart from 'components/chart';\r\nimport {\r\n  ChartDetail,\r\n  ChartValues,\r\n  ChartData,\r\n} from 'components/chart/types';\r\n\r\nimport { getRTStats } from 'redux/midgard/actions';\r\nimport { RootState } from 'redux/store';\r\n\r\nimport usePrice from 'hooks/usePrice';\r\n\r\nimport { StatsChanges } from 'types/generated/midgard/api';\r\n\r\nconst ChartView = () => {\r\n  const dispatch = useDispatch();\r\n  const isDesktopView = Grid.useBreakpoint()?.md ?? true;\r\n\r\n  useEffect(() => {\r\n    dispatch(getRTStats({}));\r\n  }, [dispatch]);\r\n\r\n  const [selectedChartVolume, setSelectedChartVolume] = useState('Volume');\r\n  const [selectedChartLiquidity, setSelectedChartLiquidity] = useState('Liquidity');\r\n  const volumeChartIndexes = useMemo(\r\n    () => isDesktopView ? [\r\n      'Volume',\r\n      'Swap',\r\n      'Add',\r\n      'Withdraw',\r\n    ] : ['Volume', 'Swap'],\r\n    [isDesktopView],\r\n  );\r\n  const liquidityChartIndexes = useMemo(\r\n    () => [\r\n      'Liquidity',\r\n      'Pooled',\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const { rtStats, rtStatsLoading } = useSelector((state: RootState) => state.Midgard);\r\n\r\n  const { getUSDPrice, hasBUSDPrice } = usePrice();\r\n  const chartValueUnit = useMemo(() => !hasBUSDPrice ? 'ᚱ' : '$', [hasBUSDPrice]);\r\n\r\n  const initialChartData = useMemo(() => {\r\n    const initialData: ChartData = {};\r\n    const defaultChartValues: ChartValues = {\r\n      allTime: [],\r\n      week: [],\r\n    };\r\n\r\n    const chartIndexes = [...volumeChartIndexes, ...liquidityChartIndexes];\r\n\r\n    chartIndexes.forEach(chartIndex => {\r\n      initialData[chartIndex] = {\r\n        values: defaultChartValues,\r\n        loading: true,\r\n      };\r\n    });\r\n\r\n    return initialData;\r\n  }, [volumeChartIndexes, liquidityChartIndexes]);\r\n\r\n  const chartData: ChartData = useMemo(() => {\r\n    if (rtStatsLoading) {\r\n      return initialChartData;\r\n    }\r\n\r\n    const { allTimeData, weekData } = rtStats;\r\n    const allTimeVolumeData: ChartDetail[] = [];\r\n    const weekVolumeData: ChartDetail[] = [];\r\n    const allTimeLiquidityData: ChartDetail[] = [];\r\n    const weekLiquidityData: ChartDetail[] = [];\r\n    const allTimeTotalPooledData: ChartDetail[] = [];\r\n    const weekTotalPooledData: ChartDetail[] = [];\r\n    const allTimeTotalSwapsData: ChartDetail[] = [];\r\n    const weekTotalSwapsData: ChartDetail[] = [];\r\n    const allTimeTotalAddData: ChartDetail[] = [];\r\n    const weekTotalAddData: ChartDetail[] = [];\r\n    const allTimeTotalWithdrawData: ChartDetail[] = [];\r\n    const weekTotalWithdrawData: ChartDetail[] = [];\r\n\r\n    const getChartData = (data: StatsChanges) => {\r\n      const time = data?.time ?? 0;\r\n      const volume = {\r\n        time,\r\n        value: getUSDPrice(bnOrZero(data?.totalVolume)),\r\n      };\r\n      const totalPooled = {\r\n        time,\r\n        value: formatBaseAsTokenAmount(baseAmount(bnOrZero(data?.totalRuneDepth))),\r\n      };\r\n      const liquidity = {\r\n        time,\r\n        value: getUSDPrice(bnOrZero(data?.totalRuneDepth).multipliedBy(2)),\r\n      };\r\n\r\n      const buyCount = data?.buyCount ?? 0;\r\n      const sellCount = data?.sellCount ?? 0;\r\n      const swapCount = buyCount + sellCount;\r\n\r\n// buyCount + sellCount\r\nconst totalSwaps = {\r\n  time,\r\n  value: String(swapCount),\r\n};\r\n\r\nconst totalAdd = { time, value: String(data?.stakeCount ?? 0) };\r\nconst totalWithdraw = { time, value: String(data?.withdrawCount ?? 0) };\r\n\r\n      return {\r\n        volume,\r\n        liquidity,\r\n        totalPooled,\r\n        totalSwaps,\r\n        totalAdd,\r\n        totalWithdraw,\r\n      };\r\n    };\r\n\r\n    allTimeData.forEach(data => {\r\n      const {\r\n        volume,\r\n        liquidity,\r\n        totalPooled,\r\n        totalSwaps,\r\n        totalAdd,\r\n        totalWithdraw,\r\n      } = getChartData(data);\r\n      allTimeVolumeData.push(volume);\r\n      allTimeLiquidityData.push(liquidity);\r\n      allTimeTotalPooledData.push(totalPooled);\r\n      allTimeTotalSwapsData.push(totalSwaps);\r\n      allTimeTotalAddData.push(totalAdd);\r\n      allTimeTotalWithdrawData.push(totalWithdraw);\r\n    });\r\n\r\n    weekData.forEach(data => {\r\n      const {\r\n        volume,\r\n        liquidity,\r\n        totalPooled,\r\n        totalSwaps,\r\n        totalAdd,\r\n        totalWithdraw,\r\n      } = getChartData(data);\r\n      weekVolumeData.push(volume);\r\n      weekLiquidityData.push(liquidity);\r\n      weekTotalPooledData.push(totalPooled);\r\n      weekTotalSwapsData.push(totalSwaps);\r\n      weekTotalAddData.push(totalAdd);\r\n      weekTotalWithdrawData.push(totalWithdraw);\r\n    });\r\n\r\n    return {\r\n      Volume: {\r\n        values: {\r\n          allTime: allTimeVolumeData,\r\n          week: weekVolumeData,\r\n        },\r\n        unit: chartValueUnit,\r\n      },\r\n      Swap: {\r\n        values: {\r\n          allTime: allTimeTotalSwapsData,\r\n          week: weekTotalSwapsData,\r\n        },\r\n      },\r\n      Add: {\r\n        values: {\r\n          allTime: allTimeTotalAddData,\r\n          week: weekTotalAddData,\r\n        },\r\n      },\r\n      Withdraw: {\r\n        values: {\r\n          allTime: allTimeTotalWithdrawData,\r\n          week: weekTotalWithdrawData,\r\n        },\r\n      },\r\n      Liquidity: {\r\n        values: {\r\n          allTime: allTimeLiquidityData,\r\n          week: weekLiquidityData,\r\n        },\r\n        unit: chartValueUnit,\r\n        type: 'line',\r\n      },\r\n      Pooled: {\r\n        values: {\r\n          allTime: allTimeTotalPooledData,\r\n          week: weekTotalPooledData,\r\n        },\r\n        unit: 'ᚱ',\r\n        type: 'line',\r\n      },\r\n    };\r\n  }, [rtStats, rtStatsLoading, initialChartData, chartValueUnit, getUSDPrice]);\r\n\r\n\r\n  return (\r\n    <Row gutter={[12, 12]}>\r\n      <Col xs={24} md={12}>\r\n        <Chart\r\n          chartIndexes={volumeChartIndexes}\r\n          chartData={chartData}\r\n          selectedIndex={selectedChartVolume}\r\n          selectChart={setSelectedChartVolume}\r\n        />\r\n      </Col>\r\n      <Col xs={24} md={12}>\r\n        <Chart\r\n          chartIndexes={liquidityChartIndexes}\r\n          chartData={chartData}\r\n          selectedIndex={selectedChartLiquidity}\r\n          selectChart={setSelectedChartLiquidity}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ChartView;\r\n","import styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nimport Table from 'components/uielements/table';\r\nimport ContentView from 'components/utility/contentView';\r\n\r\nimport { media } from 'helpers/styleHelper';\r\n\r\nexport const ContentWrapper = styled(ContentView)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  background-color: ${palette('background', 3)};\r\n  padding: 0;\r\n\r\n  .content-loader {\r\n    rect {\r\n      width: 100%;\r\n      ${media.sm`\r\n        display: 80%;\r\n      `}\r\n    }\r\n  }\r\n\r\n  .pool-list-view {\r\n    .pool-card {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledTable = styled(Table)`\r\n  tr:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PoolViewTools = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: 20px;\r\n\r\n  .add-new-pool {\r\n    display: flex;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    max-width: 160px;\r\n\r\n    .label-wrapper {\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PoolSearchWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const ActionHeader = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ActionColumn = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .action-column-wrapper {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    width: 250px;\r\n  }\r\n`;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useCallback, useMemo, useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, useHistory, Link } from 'react-router-dom';\r\n\r\nimport {\r\n  SearchOutlined,\r\n  SyncOutlined,\r\n  SwapOutlined,\r\n  DatabaseOutlined,\r\n} from '@ant-design/icons';\r\nimport { Token } from '@thorchain/asgardex-binance';\r\nimport { Row, Col, Grid } from 'antd';\r\nimport * as H from 'history';\r\nimport { compose } from 'redux';\r\n\r\nimport Helmet from 'components/helmet';\r\nimport PoolFilter from 'components/poolFilter';\r\nimport StatBar from 'components/statBar';\r\nimport TxTable from 'components/transaction/txTable';\r\nimport AddIcon from 'components/uielements/addIcon';\r\nimport Button from 'components/uielements/button';\r\nimport CoinIcon from 'components/uielements/coins/coinIcon';\r\nimport Input from 'components/uielements/input';\r\nimport Label from 'components/uielements/label';\r\nimport showNotification from 'components/uielements/notification';\r\nimport { Popover, TooltipIcon } from 'components/uielements/Popover';\r\nimport LabelLoader from 'components/utility/loaders/label';\r\n\r\nimport * as midgardActions from 'redux/midgard/actions';\r\nimport { PoolDataMap } from 'redux/midgard/types';\r\nimport { getAssetFromString } from 'redux/midgard/utils';\r\nimport { RootState } from 'redux/store';\r\nimport { AssetData, User } from 'redux/wallet/types';\r\n\r\nimport useMidgard from 'hooks/useMidgard';\r\nimport useNetwork from 'hooks/useNetwork';\r\nimport usePrice from 'hooks/usePrice';\r\n\r\nimport { getTokenName } from 'helpers/stringHelper';\r\nimport { getPoolData } from 'helpers/utils/poolUtils';\r\nimport { PoolData } from 'helpers/utils/types';\r\n\r\nimport { RUNE_SYMBOL } from 'settings/assetData';\r\n\r\nimport { Maybe } from 'types/bepswap';\r\nimport {\r\n  PoolDetailStatusEnum,\r\n  StatsData,\r\n  NetworkInfo,\r\n} from 'types/generated/midgard/api';\r\n\r\nimport ChartView from './ChartView';\r\nimport {\r\n  ContentWrapper,\r\n  ActionHeader,\r\n  ActionColumn,\r\n  PoolViewTools,\r\n  PoolSearchWrapper,\r\n  StyledTable as Table,\r\n} from './PoolView.style';\r\nimport { PoolViewData } from './types';\r\n\r\ntype Props = {\r\n  history: H.History;\r\n  pools: string[];\r\n  poolData: PoolDataMap;\r\n  stats: StatsData;\r\n  assetData: AssetData[];\r\n  user: Maybe<User>;\r\n  statsLoading: boolean;\r\n  poolLoading: boolean;\r\n  poolDataLoading: boolean;\r\n  networkInfo: NetworkInfo;\r\n  networkInfoLoading: boolean;\r\n  tokenList: Token[];\r\n  getPools: typeof midgardActions.getPools;\r\n};\r\n\r\nconst PoolView: React.FC<Props> = (props: Props): JSX.Element => {\r\n  const {\r\n    pools,\r\n    poolData,\r\n    stats,\r\n    statsLoading,\r\n    poolLoading,\r\n    poolDataLoading,\r\n    networkInfo,\r\n    networkInfoLoading,\r\n    tokenList,\r\n    getPools,\r\n  } = props;\r\n\r\n  const isDesktopView = Grid.useBreakpoint()?.md ?? true;\r\n  const [poolStatus, selectPoolStatus] = useState<PoolDetailStatusEnum>(\r\n    PoolDetailStatusEnum.Enabled,\r\n  );\r\n  const [keyword, setKeyword] = useState<string>('');\r\n\r\n  const history = useHistory();\r\n  const { reducedPricePrefix, priceIndex } = usePrice();\r\n  const { isValidPool } = useMidgard();\r\n\r\n  const loading = poolLoading || poolDataLoading;\r\n\r\n  const {\r\n    isValidFundCaps,\r\n    statusColor,\r\n    isOutboundDelayed,\r\n    getOutboundBusyTooltip,\r\n  } = useNetwork();\r\n\r\n  const handleSelectPoolStatus = useCallback(\r\n    (status: PoolDetailStatusEnum) => {\r\n      selectPoolStatus(status);\r\n    },\r\n    [selectPoolStatus],\r\n  );\r\n\r\n  const handleNewPool = () => {\r\n    showNotification({\r\n      type: 'warning',\r\n      message: 'Add New Pool Disabled.',\r\n      description:\r\n        'New pools have been disabled due to the forthcoming migration to multichain chaosnet.',\r\n    });\r\n    // if (!wallet) {\r\n    //   showNotification({\r\n    //     type: 'warning',\r\n    //     message: 'Create Pool Failed',\r\n    //     description: 'Please connect your wallet to add a new pool.',\r\n    //   });\r\n    // } else {\r\n    //   const possibleTokens = getAvailableTokensToCreate(assetData, pools);\r\n    //   if (possibleTokens.length) {\r\n    //     const symbol = possibleTokens[0].asset;\r\n    //     if (getTickerFormat(symbol) !== 'rune') {\r\n    //       const URL = `/pool/${symbol}/new`;\r\n    //       history.push(URL);\r\n    //     }\r\n    //   } else {\r\n    //     showNotification({\r\n    //       type: 'warning',\r\n    //       message: 'Create Pool Failed',\r\n    //       description: 'You do not have available asset to create a new pool.',\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  const onChangeKeywordHandler = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setKeyword(e.target.value);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const handleRefresh = useCallback(() => {\r\n    getPools();\r\n  }, [getPools]);\r\n\r\n  const renderTextCell = useCallback(\r\n    (text: string) => {\r\n      if (loading) {\r\n        return <LabelLoader />;\r\n      }\r\n      return <span>{text}</span>;\r\n    },\r\n    [loading],\r\n  );\r\n\r\n  const renderCell = useCallback(\r\n    (text: string) => {\r\n      if (loading) {\r\n        return <LabelLoader />;\r\n      }\r\n      return (\r\n        <span>\r\n          {reducedPricePrefix} {text}\r\n        </span>\r\n      );\r\n    },\r\n    [loading, reducedPricePrefix],\r\n  );\r\n\r\n  const withOutboundTooltip = useCallback(\r\n    (Component: JSX.Element) => {\r\n      if (!isOutboundDelayed) {\r\n        return Component;\r\n      }\r\n\r\n      return <Popover tooltip={getOutboundBusyTooltip()}>{Component}</Popover>;\r\n    },\r\n    [isOutboundDelayed, getOutboundBusyTooltip],\r\n  );\r\n\r\n  const buttonCol = useMemo(\r\n    () => ({\r\n      key: 'refresh',\r\n      title: (\r\n        <ActionHeader>\r\n          <Button\r\n            onClick={handleRefresh}\r\n            typevalue=\"outline\"\r\n            round=\"true\"\r\n            color={!isValidFundCaps ? 'error' : statusColor}\r\n          >\r\n            <SyncOutlined />\r\n            refresh\r\n          </Button>\r\n          {isOutboundDelayed && (\r\n            <TooltipIcon\r\n              tooltip={getOutboundBusyTooltip()}\r\n              color={statusColor}\r\n            />\r\n          )}\r\n        </ActionHeader>\r\n      ),\r\n      render: (text: string, record: PoolData) => {\r\n        const { target, values } = record;\r\n        if (target) {\r\n          const swapUrl = `/swap/${RUNE_SYMBOL}:${values.symbol}`;\r\n          const liquidityUrl = `/liquidity/${values.symbol.toUpperCase()}`;\r\n\r\n          return (\r\n            <ActionColumn>\r\n              <div className=\"action-column-wrapper\">\r\n                {withOutboundTooltip(\r\n                  <Link\r\n                    to={liquidityUrl}\r\n                    onClick={ev => {\r\n                      ev.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      style={{ margin: 'auto' }}\r\n                      round=\"true\"\r\n                      typevalue=\"outline\"\r\n                      color={!isValidFundCaps ? 'error' : statusColor}\r\n                    >\r\n                      <DatabaseOutlined />\r\n                      MANAGE\r\n                    </Button>\r\n                  </Link>,\r\n                )}\r\n                {poolStatus !== PoolDetailStatusEnum.Bootstrapped &&\r\n                  withOutboundTooltip(\r\n                    <Link\r\n                      to={swapUrl}\r\n                      onClick={ev => {\r\n                        ev.stopPropagation();\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        style={{ margin: 'auto' }}\r\n                        round=\"true\"\r\n                        color={statusColor}\r\n                      >\r\n                        <SwapOutlined />\r\n                        SWAP\r\n                      </Button>\r\n                    </Link>,\r\n                  )}\r\n              </div>\r\n            </ActionColumn>\r\n          );\r\n        }\r\n      },\r\n    }),\r\n    [\r\n      statusColor,\r\n      isValidFundCaps,\r\n      poolStatus,\r\n      isOutboundDelayed,\r\n      getOutboundBusyTooltip,\r\n      withOutboundTooltip,\r\n      handleRefresh,\r\n    ],\r\n  );\r\n\r\n  const mobileColumns = useMemo(\r\n    () => [\r\n      {\r\n        key: 'pool',\r\n        title: 'pool',\r\n        dataIndex: 'pool',\r\n        render: ({ target }: { target: string }) => (\r\n          <Row>\r\n            <Col xs={24} style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <CoinIcon type={target} size=\"small\" />\r\n            </Col>\r\n          </Row>\r\n        ),\r\n      },\r\n      {\r\n        key: 'poolprice',\r\n        title: 'pool price',\r\n        dataIndex: ['values', 'poolPrice'],\r\n        render: renderCell,\r\n        sorter: (a: PoolData, b: PoolData) => a.poolPrice.minus(b.poolPrice),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        key: 'depth',\r\n        title: 'depth',\r\n        dataIndex: ['values', 'depth'],\r\n        render: renderCell,\r\n        sorter: (a: PoolData, b: PoolData) =>\r\n          a.depth.amount().minus(b.depth.amount()),\r\n        sortDirections: ['descend', 'ascend'],\r\n        defaultSortOrder: 'descend',\r\n      },\r\n      {\r\n        key: 'volume24',\r\n        title: '24h vol',\r\n        dataIndex: ['values', 'volume24'],\r\n        render: renderCell,\r\n        sorter: (a: PoolData, b: PoolData) =>\r\n          a.volume24.amount().minus(b.volume24.amount()),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n    ],\r\n    [renderCell],\r\n  );\r\n\r\n  const desktopColumns = useMemo(\r\n    () => [\r\n      {\r\n        key: 'pool',\r\n        title: 'pool',\r\n        dataIndex: 'pool',\r\n        render: ({ target }: { target: string }) => (\r\n          <Row>\r\n            <Col xs={24} style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <CoinIcon type={target} />\r\n            </Col>\r\n          </Row>\r\n        ),\r\n      },\r\n      {\r\n        key: 'asset',\r\n        title: 'asset',\r\n        dataIndex: 'pool',\r\n        render: (_: { target: string }, record: PoolData) => {\r\n          const tokenName = getTokenName(tokenList, record.values.symbol);\r\n          return <p>{tokenName}</p>;\r\n        },\r\n        sorter: (a: PoolData, b: PoolData) => a.target.localeCompare(b.target),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        key: 'symbol',\r\n        title: 'symbol',\r\n        dataIndex: 'pool',\r\n        render: ({ target }: { target: string }) => <p>{target}</p>,\r\n        sorter: (a: PoolData, b: PoolData) => a.target.localeCompare(b.target),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        key: 'poolprice',\r\n        title: 'pool price',\r\n        dataIndex: ['values', 'poolPrice'],\r\n        render: renderCell,\r\n        sorter: (a: PoolData, b: PoolData) => a.poolPrice.minus(b.poolPrice),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        key: 'depth',\r\n        title: 'depth',\r\n        dataIndex: ['values', 'depth'],\r\n        render: renderCell,\r\n        sorter: (a: PoolData, b: PoolData) =>\r\n          a.depth.amount().minus(b.depth.amount()),\r\n        sortDirections: ['descend', 'ascend'],\r\n        defaultSortOrder: 'descend',\r\n      },\r\n      {\r\n        key: 'volume24',\r\n        title: '24h vol',\r\n        dataIndex: ['values', 'volume24'],\r\n        render: renderCell,\r\n        sorter: (a: PoolData, b: PoolData) =>\r\n          a.volume24.amount().minus(b.volume24.amount()),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      {\r\n        key: 'apy',\r\n        title: 'APY',\r\n        dataIndex: ['values', 'apy'],\r\n        render: renderTextCell,\r\n        sorter: (a: PoolData, b: PoolData) => Number(a.apy) - Number(b.apy),\r\n        sortDirections: ['descend', 'ascend'],\r\n      },\r\n      buttonCol,\r\n    ],\r\n    [renderCell, renderTextCell, buttonCol, tokenList],\r\n  );\r\n\r\n  // calculate data to show in the pool list\r\n\r\n  const poolViewData: PoolViewData[] = useMemo(\r\n    () =>\r\n      pools.map((poolName, index) => {\r\n        const { symbol = '' } = getAssetFromString(poolName);\r\n\r\n        const poolInfo = poolData[symbol] || {};\r\n        const poolDataDetail: PoolData = getPoolData(\r\n          symbol,\r\n          poolInfo,\r\n          priceIndex,\r\n        );\r\n\r\n        return {\r\n          ...poolDataDetail,\r\n          status: poolInfo?.status ?? null,\r\n          key: index,\r\n        };\r\n      }),\r\n    [poolData, pools, priceIndex],\r\n  );\r\n\r\n  const filteredData = useMemo(\r\n    () =>\r\n      poolViewData\r\n        .filter(poolItem => {\r\n          const tokenSymbol = poolItem.values.symbol.toLowerCase();\r\n          const tokenName = getTokenName(\r\n            tokenList,\r\n            tokenSymbol.toUpperCase(),\r\n          ).toLowerCase();\r\n\r\n          return (\r\n            tokenName.includes(keyword.toLowerCase()) ||\r\n            tokenSymbol.includes(keyword.toLowerCase())\r\n          );\r\n        })\r\n        .filter(poolData => {\r\n          return (\r\n            (poolStatus === PoolDetailStatusEnum.Enabled && !poolData.status) ||\r\n            poolData.status === poolStatus\r\n          );\r\n        }),\r\n    [poolViewData, keyword, poolStatus, tokenList],\r\n  );\r\n\r\n  const columns = isDesktopView ? desktopColumns : mobileColumns;\r\n\r\n  const renderPoolTable = useMemo(() => {\r\n    return (\r\n      <Table\r\n        onRow={(record: PoolData) => {\r\n          return {\r\n            onClick: () => {\r\n              // check if pool is enabled\r\n              if (isValidPool(record?.values?.symbol)) {\r\n                const URL = `/pool/${record?.values?.symbol?.toUpperCase()}`;\r\n                history.push(URL);\r\n              } else {\r\n                // redirect to manage page for bootstrapped pools\r\n                const URL = `/liquidity/${record?.values?.symbol?.toUpperCase()}`;\r\n                history.push(URL);\r\n              }\r\n            },\r\n          };\r\n        }}\r\n        columns={columns}\r\n        dataSource={filteredData}\r\n        loading={poolLoading}\r\n        rowKey=\"key\"\r\n      />\r\n    );\r\n  }, [columns, filteredData, poolLoading, history, isValidPool]);\r\n\r\n  return (\r\n    <ContentWrapper className=\"pool-view-wrapper\">\r\n      <Helmet\r\n        title=\"BEPSwap\"\r\n        content=\"BEPSwap is Binance Chain's first decentralised finance application allowing BEP2 token holders to swap their assets, or stake them to provide liquidity to the market.\"\r\n      />\r\n      <StatBar\r\n        loading={statsLoading || networkInfoLoading}\r\n        stats={stats}\r\n        networkInfo={networkInfo}\r\n      />\r\n      <ChartView />\r\n      <PoolViewTools>\r\n        <PoolFilter selected={poolStatus} onClick={handleSelectPoolStatus} />\r\n        <div className=\"add-new-pool\" onClick={handleNewPool}>\r\n          <AddIcon />\r\n          {isDesktopView && (\r\n            <Label size=\"normal\" weight=\"bold\" color=\"normal\">\r\n              ADD NEW POOL\r\n            </Label>\r\n          )}\r\n        </div>\r\n      </PoolViewTools>\r\n      <PoolSearchWrapper>\r\n        <Input\r\n          prefix={<SearchOutlined />}\r\n          sizevalue=\"big\"\r\n          placeholder=\"Search pools...\"\r\n          value={keyword}\r\n          onChange={onChangeKeywordHandler}\r\n        />\r\n      </PoolSearchWrapper>\r\n      <div className=\"pool-list-view\">{renderPoolTable}</div>\r\n      <TxTable />\r\n    </ContentWrapper>\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    (state: RootState) => ({\r\n      tokenList: state.Binance.tokenList,\r\n      pools: state.Midgard.pools,\r\n      poolData: state.Midgard.poolData,\r\n      stats: state.Midgard.stats,\r\n      statsLoading: state.Midgard.statsLoading,\r\n      poolLoading: state.Midgard.poolLoading,\r\n      poolDataLoading: state.Midgard.poolDataLoading,\r\n      assetData: state.Wallet.assetData,\r\n      user: state.Wallet.user,\r\n      networkInfo: state.Midgard.networkInfo,\r\n      networkInfoLoading: state.Midgard.networkInfoLoading,\r\n    }),\r\n    {\r\n      getPools: midgardActions.getPools,\r\n    },\r\n  ),\r\n  withRouter,\r\n)(PoolView);\r\n","import PoolView from './PoolView';\r\n\r\nexport default PoolView;\r\n","import Helmet from './Helmet';\r\n\r\nexport default Helmet;\r\n","import React from 'react';\r\n\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport default ({ title, content }: { title: string, content: string }) => (\r\n  <Helmet>\r\n    <title>{title}</title>\r\n    <meta name=\"description\" content={content} />\r\n  </Helmet>\r\n);\r\n","import { Input } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { palette, key } from 'styled-theme';\r\n\r\nconst fontSettings = {\r\n  small: {\r\n    size: key('sizes.font.small', '10px'),\r\n    spacing: '0.5px',\r\n  },\r\n  normal: {\r\n    size: '14px',\r\n    spacing: '0.5px',\r\n  },\r\n  big: {\r\n    size: '20px',\r\n    spacing: '0.75px',\r\n  },\r\n};\r\n\r\nconst sizes = {\r\n  small: '20px',\r\n  normal: '25px',\r\n  big: '36px',\r\n};\r\n\r\nconst colors = {\r\n  primary: palette('primary', 0),\r\n  success: palette('success', 0),\r\n  warning: palette('warning', 0),\r\n  error: palette('error', 0),\r\n};\r\n\r\nexport const InputWrapper = styled(Input)`\r\n  &.ant-input-affix-wrapper,\r\n  &.ant-input {\r\n    height: ${props => sizes[props.sizevalue]};\r\n    font-size: ${props => fontSettings[props.sizevalue].size};\r\n    letter-spacing: ${props => fontSettings[props.sizevalue].spacing};\r\n    ${props => props.typevalue === 'ghost' && 'border: none;'};\r\n    ${props => props.typevalue === 'ghost' && 'background: #F0F3F7;'};\r\n\r\n    border: 1px solid ${palette('gray', 0)};\r\n    background: ${palette('background', 1)};\r\n    color: ${palette('text', 0)};\r\n    input,\r\n    input:-internal-autofill-selected {\r\n      color: ${palette('text', 0)};\r\n      background: ${palette('background', 1)};\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n      border-color: ${props => colors[props.color]};\r\n      --antd-wave-shadow-color: ${props => colors[props.color]};\r\n      box-shadow: ${props =>\r\n        props.typevalue === 'ghost'\r\n          ? 'none'\r\n          : '0 0 0 2px ' + colors[props.color]};\r\n    }\r\n  }\r\n\r\n  .ant-input-prefix {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { InputWrapper } from './input.style';\r\n\r\nclass Input extends Component {\r\n  render() {\r\n    return <InputWrapper {...this.props} />;\r\n  }\r\n}\r\n\r\nInput.propTypes = {\r\n  typevalue: PropTypes.oneOf(['normal', 'ghost']),\r\n  sizevalue: PropTypes.oneOf(['small', 'normal', 'big']),\r\n  color: PropTypes.oneOf(['primary', 'success', 'warning', 'error']),\r\n};\r\n\r\nInput.defaultProps = {\r\n  typevalue: 'normal',\r\n  sizevalue: 'normal',\r\n  color: 'primary',\r\n};\r\n\r\nexport default Input;\r\n","import Input from './input';\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\nimport { palette, key } from 'styled-theme';\r\n\r\nexport const ContentViewWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: auto;\r\n\r\n  padding-top: ${key('sizes.gutter.vertical', '10px')};\r\n  padding-bottom: ${key('sizes.gutter.vertical', '10px')};\r\n  padding-left: ${key('sizes.gutter.horizontal', '30px')};\r\n  padding-right: ${key('sizes.gutter.horizontal', '30px')};\r\n\r\n  background: ${props =>\r\n    props.transparent ? 'transparent' : palette('background', 1)};\r\n`;\r\n","import React, { Component } from 'react';\r\n\r\nimport { ContentViewWrapper } from './contentView.style';\r\n\r\nexport default class ContentView extends Component {\r\n  render() {\r\n    // eslint-disable-next-line react/prop-types\r\n    const { className, children, ...props } = this.props;\r\n    return (\r\n      <ContentViewWrapper\r\n        className={`content-view-wrapper ${className}`}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </ContentViewWrapper>\r\n    );\r\n  }\r\n}\r\n","import ContentView from './contentView';\r\n\r\nexport default ContentView;\r\n","import { Table } from 'antd';\r\nimport { darken, transparentize } from 'polished';\r\nimport styled from 'styled-components';\r\nimport { key, palette } from 'styled-theme';\r\n\r\nimport { media } from 'helpers/styleHelper';\r\n\r\nexport const TableWrapper = styled(Table)`\r\n  border: 1px solid ${palette('gray', 0)};\r\n\r\n  background: transparent;\r\n\r\n  .ant-table,\r\n  .ant-table-container,\r\n  .ant-table-content,\r\n  .ant-table-thead,\r\n  .ant-table-tbody {\r\n    background: transparent;\r\n    & > tr {\r\n      background: transparent;\r\n    }\r\n  }\r\n\r\n  .ant-table-thead > tr > th {\r\n    height: ${props => (props.sizeValue === 'small' ? '52px' : '70px')};\r\n\r\n    border-top: none;\r\n    border-radius: none;\r\n    border-color: ${palette('gray', 0)};\r\n    font-size: ${key('sizes.font.normal', '12px')};\r\n    color: ${palette('text', 2)};\r\n\r\n    background: ${props =>\r\n      transparentize(0.1, props.theme.palette.background[1])};\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n    &:hover {\r\n      background-color: ${props =>\r\n        darken(0.05, props.theme.palette.background[2])} !important;\r\n    }\r\n\r\n    .ant-table-column-title {\r\n      padding-top: 6px;\r\n    }\r\n  }\r\n\r\n  .ant-table-placeholder {\r\n    background: ${props =>\r\n      transparentize(0.1, props.theme.palette.background[1])} !important;\r\n    border-color: ${palette('gray', 0)};\r\n    td {\r\n      &:hover {\r\n        background: ${props =>\r\n          transparentize(0.1, props.theme.palette.background[1])} !important;\r\n      }\r\n    }\r\n\r\n    .ant-empty-normal {\r\n      color: ${palette('text', 2)};\r\n      .ant-empty-image svg {\r\n        color: ${palette('text', 2)};\r\n        path {\r\n          fill: ${palette('background', 1)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-table-tbody > tr > td {\r\n    height: ${props => (props.sizeValue === 'small' ? '48px' : '64px')};\r\n    border-color: ${palette('gray', 0)};\r\n    color: ${palette('text', 0)};\r\n\r\n    background: ${props =>\r\n      transparentize(0.1, props.theme.palette.background[1])};\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  .ant-table-thead\r\n    > tr.ant-table-row-hover:not(.ant-table-expanded-row):not(.ant-table-row-selected)\r\n    > td,\r\n  .ant-table-tbody\r\n    > tr.ant-table-row-hover:not(.ant-table-expanded-row):not(.ant-table-row-selected)\r\n    > td,\r\n  .ant-table-thead\r\n    > tr:hover:not(.ant-table-expanded-row):not(.ant-table-row-selected)\r\n    > td,\r\n  .ant-table-tbody\r\n    > tr:hover:not(.ant-table-expanded-row):not(.ant-table-row-selected)\r\n    > td {\r\n    background-color: ${props =>\r\n      darken(0.05, props.theme.palette.background[2])} !important;\r\n  }\r\n\r\n  .ant-table-cell {\r\n    padding-top: 4px;\r\n    padding-right: 2px;\r\n    padding-left: 2px;\r\n    padding-bottom: 2px;\r\n    ${media.lg`\r\n      padding-top: 8px;\r\n      padding-right: 4px;\r\n      padding-left: 4px;\r\n      padding-bottom: 8px;\r\n    `}\r\n\r\n    &:first-child {\r\n      padding-left: 12px;\r\n    }\r\n    &:last-child {\r\n      padding-right: 12px;\r\n    }\r\n\r\n    padding-top: ${props => props.sizeValue === 'small' && '0px'} !important;\r\n    padding-bottom: ${props => props.sizeValue === 'small' && '0px'} !important;\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TableWrapper } from './table.style';\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { className, size, ...props } = this.props;\r\n\r\n    return (\r\n      <TableWrapper\r\n        className={`table-wrapper ${className}`}\r\n        pagination={false}\r\n        sizeValue={size}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nTable.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nTable.defaultProps = {\r\n  className: '',\r\n};\r\n\r\nexport default Table;\r\n","import Table from './table';\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\n\r\nimport ContentLoader from 'react-content-loader';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport themes, { ThemeType } from '@thorchain/asgardex-theme';\r\n\r\nimport { RootState } from 'redux/store';\r\n\r\nconst LabelLoader = () => {\r\n  const themeType = useSelector((state: RootState) => state.App.themeType);\r\n  const isLight = themeType === ThemeType.LIGHT;\r\n  const theme = isLight ? themes.light : themes.dark;\r\n\r\n  return (\r\n    <ContentLoader\r\n      className=\"content-loader\"\r\n      backgroundColor={theme.palette.background[2]}\r\n      foregroundColor={theme.palette.gray[1]}\r\n      height={20}\r\n      width={60}\r\n      speed={1.2}\r\n    >\r\n      <rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"60\" height=\"20\" />\r\n    </ContentLoader>\r\n  );\r\n};\r\n\r\nexport default LabelLoader;\r\n","import LabelLoader from './labelLoader';\r\n\r\nexport default LabelLoader;\r\n","export default __webpack_public_path__ + \"static/media/asset-arrow-blacksmall.65b0bbfb.svg\";","export default __webpack_public_path__ + \"static/media/asset-arrow-green-dash.45d11404.svg\";","export default __webpack_public_path__ + \"static/media/asset-arrow-green.2ee996db.svg\";","export default __webpack_public_path__ + \"static/media/asset-arrow-grey.78b72ec2.svg\";","export default __webpack_public_path__ + \"static/media/asset-arrow-twoway.b227f017.svg\";","export default __webpack_public_path__ + \"static/media/asset-arrow-yello.67dc5a21.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Code Icon\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 1,\n  y1: 13,\n  x2: 8,\n  y2: 5,\n  stroke: \"currentColor\",\n  strokeWidth: 3\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 1,\n  y1: 12,\n  x2: 8,\n  y2: 20,\n  stroke: \"currentColor\",\n  strokeWidth: 3\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 22,\n  y1: 5,\n  x2: 29,\n  y2: 13,\n  stroke: \"currentColor\",\n  strokeWidth: 3\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 22,\n  y1: 20,\n  x2: 29,\n  y2: 12,\n  stroke: \"currentColor\",\n  strokeWidth: 3\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 12,\n  y1: 24,\n  x2: 18,\n  y2: 1,\n  strokeLinecap: \"round\",\n  stroke: \"currentColor\",\n  strokeWidth: 3\n});\n\nfunction SvgAssetCodeIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"30px\",\n    height: \"25px\",\n    viewBox: \"0 0 30 25\",\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAssetCodeIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/asset-code-icon.acefc70f.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/asset-dropdown.1fa55cbd.svg\";","export default __webpack_public_path__ + \"static/media/asset-market.8ede6779.svg\";","export default __webpack_public_path__ + \"static/media/asset-refresh.b6bd0b77.svg\";","export default __webpack_public_path__ + \"static/media/asset-user.3568af51.svg\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 512c-68.38 0-132.667-26.629-181.02-74.98-48.351-48.353-74.98-112.64-74.98-181.02s26.629-132.667 74.98-181.02c48.353-48.351 112.64-74.98 181.02-74.98s132.667 26.629 181.02 74.98c48.351 48.353 74.98 112.64 74.98 181.02s-26.629 132.667-74.98 181.02c-48.353 48.351-112.64 74.98-181.02 74.98z\",\n  fill: \"#fcd232\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 0v512c68.38 0 132.667-26.629 181.02-74.98 48.351-48.353 74.98-112.64 74.98-181.02s-26.629-132.667-74.98-181.02c-48.353-48.351-112.64-74.98-181.02-74.98z\",\n  fill: \"#f7b90f\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m256 452c-108.075 0-196-87.925-196-196s87.925-196 196-196 196 87.925 196 196-87.925 196-196 196z\",\n  fill: \"#ffee78\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m452 256c0-108.075-87.925-196-196-196v392c108.075 0 196-87.925 196-196z\",\n  fill: \"#fcd232\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m332.577 251.655c9.875-10.699 15.923-24.982 15.923-40.655 0-33.084-26.916-60-60-60v-15c0-8.284-6.716-15-15-15s-15 6.716-15 15v15h-30v-15c0-8.284-6.716-15-15-15s-15 6.716-15 15v15h-10c-8.284 0-15 6.716-15 15s6.716 15 15 15h10v150h-10c-8.284 0-15 6.716-15 15s6.716 15 15 15h10v15c0 8.284 6.716 15 15 15s15-6.716 15-15v-15h30v15c0 8.284 6.716 15 15 15s15-6.716 15-15v-15h10c33.084 0 60-26.916 60-60 0-20.434-10.276-38.506-25.923-49.345zm-14.077-40.655c0 16.542-13.458 30-30 30h-60v-60h60c16.542 0 30 13.458 30 30zm-20 120h-70v-60h60 10c16.542 0 30 13.458 30 30s-13.458 30-30 30z\",\n  fill: \"#fcd232\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m332.577 251.655c9.875-10.699 15.923-24.982 15.923-40.655 0-33.084-26.916-60-60-60v-15c0-8.284-6.716-15-15-15s-15 6.716-15 15v15h-2.5v30h32.5c16.542 0 30 13.458 30 30s-13.458 30-30 30h-32.5v30h32.5 10c16.542 0 30 13.458 30 30s-13.458 30-30 30h-42.5v30h2.5v15c0 8.284 6.716 15 15 15s15-6.716 15-15v-15h10c33.084 0 60-26.916 60-60 0-20.434-10.276-38.506-25.923-49.345z\",\n  fill: \"#f7b90f\"\n});\n\nfunction SvgBitcoinIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    width: 512,\n    ref: svgRef\n  }, props), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBitcoinIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/bitcoin-icon.0439c673.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nfunction SvgCurrencyIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 480 480\",\n    style: {\n      enableBackground: \"new 0 0 480 480\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_1_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -52.1,\n    y1: 551.4,\n    x2: -33.683,\n    y2: 569.817,\n    gradientTransform: \"matrix(8 0 0 -8 567 4941)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FF5F6D\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFC371\"\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"url(#SVGID_1_)\"\n    },\n    d: \"M344,480c4.8,0,8-3.2,8-8v-32c0-4.8-3.2-8-8-8H104c-4.8,0-8,3.2-8,8v32c0,4.8,3.2,8,8,8H344z  M208,448h32v16h-32V448z M192,464h-32v-16h32V464z M256,448h32v16h-32V448z M336,464h-32v-16h32V464z M112,448h32v16h-32V448z\"\n  }), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_2_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -50.1,\n    y1: 558.4,\n    x2: -31.683,\n    y2: 576.817,\n    gradientTransform: \"matrix(8 0 0 -8 567 4941)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FF5F6D\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFC371\"\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"url(#SVGID_2_)\"\n    },\n    d: \"M368,416v-32c0-4.8-3.2-8-8-8H120c-4.8,0-8,3.2-8,8v32c0,4.8,3.2,8,8,8h240 C364.8,424,368,420.8,368,416z M224,392h32v16h-32V392z M208,408h-32v-16h32V408z M272,392h32v16h-32V392z M128,392h32v16h-32V392z  M352,408h-32v-16h32V408z\"\n  }), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_3_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -53.1,\n    y1: 565.4,\n    x2: -34.683,\n    y2: 583.817,\n    gradientTransform: \"matrix(8 0 0 -8 567 4941)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FF5F6D\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFC371\"\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"url(#SVGID_3_)\"\n    },\n    d: \"M336,368c4.8,0,8-3.2,8-8v-32c0-4.8-3.2-8-8-8H96c-4.8,0-8,3.2-8,8v32c0,4.8,3.2,8,8,8H336z  M232,352h-32v-16h32V352z M248,336h32v16h-32V336z M184,352h-32v-16h32V352z M328,352h-32v-16h32V352z M104,336h32v16h-32V336z\"\n  }), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_4_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -47.1,\n    y1: 572.4,\n    x2: -28.683,\n    y2: 590.817,\n    gradientTransform: \"matrix(8 0 0 -8 567 4941)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FF5F6D\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFC371\"\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"url(#SVGID_4_)\"\n    },\n    d: \"M392,304v-32c0-4.8-3.2-8-8-8H144c-4.8,0-8,3.2-8,8v32c0,4.8,3.2,8,8,8h240 C388.8,312,392,308.8,392,304z M248,280h32v16h-32V280z M232,296h-32v-16h32V296z M296,280h32v16h-32V280z M152,280h32v16h-32V280z  M376,296h-32v-16h32V296z\"\n  }), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_5_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -54.1765,\n    y1: 590.3265,\n    x2: -31.5735,\n    y2: 612.9235,\n    gradientTransform: \"matrix(8 0 0 -8 567 4941)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FF5F6D\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFC371\"\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"url(#SVGID_5_)\"\n    },\n    d: \"M224,0C153.6,0,96,57.6,96,128s57.6,128,128,128s128-57.6,128-128S294.4,0,224,0z M224,240 c-61.6,0-112-50.4-112-112S162.4,16,224,16s112,50.4,112,112S285.6,240,224,240z\"\n  }), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_6_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: -48.8273,\n    y1: 595.1572,\n    x2: -36.9143,\n    y2: 607.0712,\n    gradientTransform: \"matrix(8 0 0 -8 567 4941)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#FF5F6D\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#FFC371\"\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"url(#SVGID_6_)\"\n    },\n    d: \"M256,120h-24V84.8l23.2,3.2c4,0.8,8.8-2.4,8.8-6.4s-2.4-8.8-6.4-8.8l0,0l-25.6-4V56 c0-4.8-3.2-8-8-8s-8,3.2-8,8v11.2L192.8,64c-4-0.8-8,2.4-8.8,7.2l-8,56c-0.8,4,2.4,8.8,6.4,8.8h0.8h32v35.2l-30.4-3.2 c-4-0.8-8,2.4-8.8,7.2c-0.8,4,2.4,8,7.2,8.8l32.8,3.2V200c0,4.8,3.2,8,8,8c4.8,0,8-3.2,8-8v-11.2l31.2,3.2h0.8c4.8,0,8-3.2,8-8v-0.8 l-8-56C263.2,123.2,260,120,256,120z M193.6,120l5.6-39.2l16.8,2.4V120H193.6z M232,172.8V136h16.8l5.6,39.2L232,172.8z\"\n  }), _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16);\n}\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCurrencyIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/currency-icon.9ea81fae.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/icon-arrow-button.04725625.svg\";","export default __webpack_public_path__ + \"static/media/orb-blue.32f57d7e.svg\";","export default __webpack_public_path__ + \"static/media/orb-green.c233dd58.svg\";","// All icons used as <MySVGIcon> components\r\nimport blackArrowIcon from 'assets/SVG/asset-arrow-blacksmall.svg';\r\nimport arrowDashIcon from 'assets/SVG/asset-arrow-green-dash.svg';\r\nimport arrowGreenIcon from 'assets/SVG/asset-arrow-green.svg';\r\nimport greyArrowIcon from 'assets/SVG/asset-arrow-grey.svg';\r\nimport arrowTwoIcon from 'assets/SVG/asset-arrow-twoway.svg';\r\nimport arrowYellowIcon from 'assets/SVG/asset-arrow-yello.svg';\r\nimport { ReactComponent as CodeIcon } from 'assets/SVG/asset-code-icon.svg';\r\nimport dropdownIcon from 'assets/SVG/asset-dropdown.svg';\r\nimport marketIcon from 'assets/SVG/asset-market.svg';\r\nimport refreshIcon from 'assets/SVG/asset-refresh.svg';\r\nimport userAvatarIcon from 'assets/SVG/asset-user.svg';\r\nimport { ReactComponent as BitcoinIcon } from 'assets/SVG/bitcoin-icon.svg';\r\nimport { ReactComponent as CurrencyIcon } from 'assets/SVG/currency-icon.svg';\r\n// All sources used as `src`, for example in <img src='' />\r\nimport blueArrowIcon from 'assets/SVG/icon-arrow-button.svg';\r\nimport orbBlueIcon from 'assets/SVG/orb-blue.svg';\r\nimport orbGreenIcon from 'assets/SVG/orb-green.svg';\r\n\r\nexport {\r\n  CurrencyIcon,\r\n  BitcoinIcon,\r\n  userAvatarIcon,\r\n  arrowYellowIcon,\r\n  arrowGreenIcon,\r\n  orbBlueIcon,\r\n  orbGreenIcon,\r\n  arrowDashIcon,\r\n  arrowTwoIcon,\r\n  marketIcon,\r\n  refreshIcon,\r\n  dropdownIcon,\r\n  blackArrowIcon,\r\n  blueArrowIcon,\r\n  greyArrowIcon,\r\n  CodeIcon,\r\n};\r\n","// This icon file is generated automatically.\n// tslint:disable\nvar SearchOutlined = {\n  \"name\": \"search\",\n  \"theme\": \"outlined\",\n  \"icon\": {\n    \"tag\": \"svg\",\n    \"attrs\": {\n      \"viewBox\": \"64 64 896 896\",\n      \"focusable\": \"false\"\n    },\n    \"children\": [{\n      \"tag\": \"path\",\n      \"attrs\": {\n        \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\"\n      }\n    }]\n  }\n};\nexport default SearchOutlined;","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\n\nSearchOutlined.displayName = 'SearchOutlined';\nexport default React.forwardRef(SearchOutlined);","import React from 'react';\r\n\r\nimport { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst LoaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst ChartLoader: React.FC = (): JSX.Element => (\r\n  <LoaderWrapper>\r\n    <Spin />\r\n  </LoaderWrapper>\r\n);\r\n\r\nexport default ChartLoader;\r\n","import ChartLoader from './chartLoader';\r\n\r\nexport default ChartLoader;\r\n","import { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { transparentize } from 'polished';\r\nimport styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nimport { media } from 'helpers/styleHelper';\r\n\r\ntype HeaderToggleProps = {\r\n  primary?: boolean;\r\n};\r\n\r\ntype BlurWrapperProps = {\r\n  isBlur?: boolean;\r\n};\r\n\r\ntype ChartContainerProps = {\r\n  gradientStart: string;\r\n  gradientStop: string;\r\n};\r\n\r\nexport const ChartContainer = styled.div`\r\n  background: transparent;\r\n  border: 1px solid ${palette('gray', 0)};\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  width: 100%;\r\n  height: 100%;\r\n  ${media.sm`\r\n    padding: 10px 20px;\r\n    height: 288px;\r\n  `}\r\n  background-image: ${(props: ChartContainerProps) =>\r\n    `linear-gradient(to bottom, ${transparentize(0.7, props.gradientStart)}, ${transparentize(1, props.gradientStop)})`};\r\n`;\r\n\r\nexport const ChartHeaderType = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ChartHeaderItem = styled.div`\r\n  margin-right: 20px;\r\n  &:last-child {\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TypeContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & > * {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const TimeContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  & > * {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\nexport const HeaderToggle = styled.span`\r\n  color: ${palette('text', 0)};\r\n  font-size: 14px !important;\r\n  font-weight: ${(props: HeaderToggleProps) =>\r\n    props.primary ? '600' : 'normal'};\r\n  cursor: pointer;\r\n  ${media.sm`\r\n    font-size: 18px;\r\n    &:hover {\r\n      opacity: 0.8;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const ChartWrapper = styled.div`\r\n  margin-top: 10px;\r\n  position: relative;\r\n  width: calc(100% - 10px);\r\n  height: calc(100% - 40px);\r\n  min-height: 200px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const LineChart = styled(Line)`\r\n  width: 100%;\r\n  font-family: 'Exo 2';\r\n`;\r\n\r\nexport const BarChart = styled(Bar)`\r\n  width: 100%;\r\n  font-family: 'Exo 2';\r\n`;\r\n\r\nexport const ComingSoonWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: 5;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${palette('text', 1)};\r\n`;\r\n\r\nexport const ComingSoonText = styled.p`\r\n  text-transform: uppercase;\r\n  margin: 10px 0 0;\r\n  padding: 0;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nexport const BlurWrapper = styled.div<BlurWrapperProps>`\r\n  width: 100%;\r\n  height: 100%;\r\n  filter: ${props => (props.isBlur ? 'blur(10px)' : 'none')};\r\n`;\r\n","import { random } from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport { FixmeType } from 'types/bepswap';\r\n\r\nexport const generateRandomTimeSeries = (\r\n  minValue: number,\r\n  maxValue: number,\r\n) => {\r\n  const series = [];\r\n  for (\r\n    let itr = moment().subtract(15, 'days');\r\n    itr.isBefore(moment.now());\r\n    itr = itr.add(1, 'day')\r\n  ) {\r\n    series.push({\r\n      time: itr.unix(),\r\n      value: (\r\n        minValue +\r\n        (random(100) / 100) * (maxValue - minValue)\r\n      ).toString(),\r\n    });\r\n  }\r\n  return series;\r\n};\r\n\r\nexport const getRandomChartData = () => {\r\n  const randomSeries = generateRandomTimeSeries(0, 15);\r\n\r\n  const labels: Array<string> = randomSeries.map(data => {\r\n    return moment.unix(data.time).format('MMM DD');\r\n  });\r\n\r\n  const values: Array<number> = randomSeries.map(data =>\r\n    Number(data.value.split(',').join('')),\r\n  );\r\n\r\n  return {\r\n    labels,\r\n    values,\r\n  };\r\n};\r\n\r\nexport const getDisplayData = ({ labels, values, colors }: FixmeType) => (\r\n  canvas: HTMLCanvasElement,\r\n) => {\r\n  const ctx = canvas.getContext('2d');\r\n  let gradientStroke: CanvasGradient;\r\n\r\n  if (ctx) {\r\n    gradientStroke = ctx.createLinearGradient(0, 100, 0, 300);\r\n    gradientStroke.addColorStop(0, colors.gradientStart);\r\n    gradientStroke.addColorStop(1, colors.gradientStop);\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          lineTension: 0.5,\r\n          backgroundColor: gradientStroke,\r\n          borderColor: colors.line,\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          borderWidth: 2,\r\n          pointBorderColor: colors.line,\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 1,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 1,\r\n          pointHitRadius: 50,\r\n          data: values,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  return {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        fill: false,\r\n        lineTension: 0.2,\r\n        borderColor: '#436eb9',\r\n        borderCapStyle: 'butt',\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: 'miter',\r\n        borderWidth: 2,\r\n        pointBorderColor: '#436eb9',\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 1,\r\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n        pointHoverBorderWidth: 0,\r\n        pointRadius: 1,\r\n        pointHitRadius: 50,\r\n        data: values,\r\n      },\r\n    ],\r\n  };\r\n};\r\n","import React, { useMemo } from 'react';\r\n\r\nimport { defaults } from 'react-chartjs-2';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport themes, { ThemeType } from '@thorchain/asgardex-theme';\r\nimport { Grid } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { RootState } from 'redux/store';\r\n\r\nimport { abbreviateNumber } from 'helpers/numberHelper';\r\n\r\nimport { CodeIcon } from '../icons';\r\nimport Loader from '../utility/loaders/chart';\r\nimport {\r\n  ChartContainer,\r\n  HeaderContainer,\r\n  TypeContainer,\r\n  TimeContainer,\r\n  HeaderToggle,\r\n  ChartWrapper,\r\n  BarChart,\r\n  LineChart,\r\n  BlurWrapper,\r\n  ComingSoonWrapper,\r\n  ComingSoonText,\r\n} from './chart.style';\r\nimport { ChartData, ChartTimeFrame } from './types';\r\nimport { getDisplayData, getRandomChartData } from './utils';\r\n\r\ntype Props = {\r\n  chartData: ChartData;\r\n  chartIndexes: string[];\r\n  selectedIndex: string;\r\n  selectChart: (value: string) => void;\r\n};\r\n\r\n// https://www.chartjs.org/docs/latest/general/fonts.html#missing-fonts\r\ndefaults.global.defaultFontSize = 14;\r\ndefaults.global.defaultFontStyle = 'normal';\r\n\r\nconst DefaultChart: React.FC<Props> = React.memo(\r\n  (props: Props): JSX.Element => {\r\n    const { chartIndexes = [], chartData, selectedIndex, selectChart } = props;\r\n    const [chartTimeframe, setChartTimeframe] = React.useState<ChartTimeFrame>(\r\n      'allTime',\r\n    );\r\n\r\n    const isDesktopView = Grid.useBreakpoint()?.md ?? false;\r\n\r\n    const themeType = useSelector((state: RootState) => state.App.themeType);\r\n    const isLight = themeType === ThemeType.LIGHT;\r\n    const theme = isLight ? themes.light : themes.dark;\r\n    const colors = useMemo(\r\n      () => ({\r\n        text: theme.palette.text[0],\r\n        line: isLight ? '#23DCC8' : '#23DCC8',\r\n        backgroundGradientStart: isLight ? '#c8fffa' : '#186b63',\r\n        backgroundGradientStop: isLight ? '#ffffff' : '#23DCC8',\r\n        gradientStart: isLight ? '#23DCC8' : '#186b63',\r\n        gradientStop: isLight ? '#ffffff' : '#23dcca',\r\n      }),\r\n      [isLight, theme],\r\n    );\r\n    const randomData = useMemo(() => getRandomChartData(), []);\r\n\r\n    const selectedChartData = chartData?.[selectedIndex];\r\n    const isComingSoonChart = selectedChartData?.comingSoon ?? false;\r\n    const isChartLoading = selectedChartData?.loading ?? false;\r\n    const selectedChartType = selectedChartData?.type ?? 'bar';\r\n    const selectedChartValues = selectedChartData?.values;\r\n    const unit = selectedChartData?.unit ?? '';\r\n    const filteredByTime = selectedChartValues?.[chartTimeframe] ?? [];\r\n\r\n    const labels: Array<string> = filteredByTime.map(data => {\r\n      return moment.unix(data.time).format('MMM DD');\r\n    });\r\n\r\n    const values: Array<number> = filteredByTime.map(data =>\r\n      Number(data.value.split(',').join('')),\r\n    );\r\n\r\n    const getData = useMemo(() => getDisplayData({ labels, values, colors }), [\r\n      labels,\r\n      values,\r\n      colors,\r\n    ]);\r\n\r\n    const getRandomSeries = useMemo(\r\n      () =>\r\n        getDisplayData({\r\n          labels: randomData.labels,\r\n          values: randomData.values,\r\n          colors,\r\n        }),\r\n      [randomData, colors],\r\n    );\r\n\r\n    const options = useMemo(\r\n      () => ({\r\n        maintainAspectRatio: false,\r\n        title: {\r\n          display: false,\r\n        },\r\n        legend: {\r\n          display: false,\r\n        },\r\n        layout: {\r\n          padding: {\r\n            left: '10px',\r\n            right: '10px',\r\n            top: '10px',\r\n            bottom: '10px',\r\n          },\r\n        },\r\n        animation: {\r\n          duration: 0,\r\n        },\r\n        tooltips: {\r\n          titleFontSize: 18,\r\n          bodyFontSize: 16,\r\n          callbacks: {\r\n            label: ({ yLabel }: { yLabel: number }) => {\r\n              // if greater than 100M\r\n              if (yLabel > 100000000) {\r\n                return `${unit}${abbreviateNumber(yLabel, 0)}`;\r\n              }\r\n              const label = `${unit}${new Intl.NumberFormat().format(\r\n                Math.floor(yLabel),\r\n              )}`;\r\n              return label;\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n              ticks: {\r\n                fontSize: 14,\r\n                fontColor: colors.text,\r\n                maxTicksLimit: isDesktopView ? 5 : 3,\r\n                autoSkipPadding: 5,\r\n                maxRotation: 0,\r\n                callback(value: string) {\r\n                  if (Number(value) === 0) {\r\n                    return '0';\r\n                  }\r\n                  return value;\r\n                },\r\n              },\r\n            },\r\n          ],\r\n          yAxes: [\r\n            {\r\n              type: 'linear',\r\n              stacked: true,\r\n              id: 'value',\r\n              ticks: {\r\n                autoSkip: true,\r\n                maxTicksLimit: isDesktopView ? 4 : 3,\r\n                callback(value: string) {\r\n                  if (Number(value) === 0) {\r\n                    return `${unit}0`;\r\n                  }\r\n                  return `${unit}${abbreviateNumber(Number(value))}`;\r\n                },\r\n                padding: 10,\r\n                fontSize: 14,\r\n                fontColor: colors.text,\r\n              },\r\n              gridLines: {\r\n                display: false,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      }),\r\n      [unit, colors, isDesktopView],\r\n    );\r\n\r\n    const renderComingSoonChart = useMemo(() => {\r\n      return (\r\n        <>\r\n          <ComingSoonWrapper>\r\n            <CodeIcon />\r\n            <ComingSoonText>Coming Soon...</ComingSoonText>\r\n          </ComingSoonWrapper>\r\n          <BlurWrapper isBlur>\r\n            <LineChart data={getRandomSeries} options={options} />\r\n          </BlurWrapper>\r\n        </>\r\n      );\r\n    }, [getRandomSeries, options]);\r\n\r\n    const renderChart = () => {\r\n      if (isComingSoonChart) {\r\n        return renderComingSoonChart;\r\n      }\r\n\r\n      if (isChartLoading) {\r\n        return <Loader />;\r\n      }\r\n\r\n      if (selectedChartType === 'bar') {\r\n        return <BarChart data={getData} options={options} />;\r\n      }\r\n\r\n      return <LineChart data={getData} options={options} />;\r\n    };\r\n\r\n    const renderHeader = () => {\r\n      return (\r\n        <HeaderContainer>\r\n          <TypeContainer>\r\n            {chartIndexes.map(chartIndex => (\r\n              <HeaderToggle\r\n                primary={selectedIndex === chartIndex}\r\n                onClick={() => selectChart(chartIndex)}\r\n              >\r\n                {chartIndex}\r\n              </HeaderToggle>\r\n            ))}\r\n          </TypeContainer>\r\n          <TimeContainer>\r\n            <HeaderToggle\r\n              primary={chartTimeframe === 'week'}\r\n              onClick={() => setChartTimeframe('week')}\r\n            >\r\n              Week\r\n            </HeaderToggle>\r\n            <HeaderToggle\r\n              primary={chartTimeframe === 'allTime'}\r\n              onClick={() => setChartTimeframe('allTime')}\r\n            >\r\n              All\r\n            </HeaderToggle>\r\n          </TimeContainer>\r\n        </HeaderContainer>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <ChartContainer\r\n        gradientStart={colors.backgroundGradientStart}\r\n        gradientStop={colors.backgroundGradientStop}\r\n      >\r\n        {renderHeader()}\r\n        <ChartWrapper>{renderChart()}</ChartWrapper>\r\n      </ChartContainer>\r\n    );\r\n  },\r\n);\r\n\r\nexport default DefaultChart;\r\n","import Chart from './chart';\r\n\r\nexport default Chart;\r\n","import { Statistic } from 'antd';\r\nimport { transparentize } from 'polished';\r\nimport styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nexport const StyledStatistic = styled(Statistic)`\r\n  background: ${props => transparentize(0.1, props.theme.palette.background[0])};\r\n  text-transform: uppercase;\r\n  padding: 4px 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid ${palette('gray', 0)};\r\n  height: 60px;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 6px;\r\n    height: 60px;\r\n    left: 8px;\r\n    top: 8px;\r\n    border-bottom-left-radius: 3px;\r\n    border-top-left-radius: 3px;\r\n    background: ${palette('gradient', 0)};\r\n  }\r\n\r\n  .ant-statistic-title {\r\n    color: ${palette('text', 1)};\r\n    font-size: 14px;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ant-statistic-content {\r\n    margin-top: 6px;\r\n    display: flex;\r\n\r\n    span {\r\n      color: ${palette('text', 0)};\r\n      font-family: 'Exo 2';\r\n      font-size: 16px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { bnOrZero } from '@thorchain/asgardex-util';\r\nimport { Row, Col } from 'antd';\r\n\r\nimport usePrice from 'hooks/usePrice';\r\n\r\nimport { PoolData } from 'helpers/utils/types';\r\n\r\nimport { PoolDetail } from 'types/generated/midgard';\r\n\r\nimport LabelLoader from '../utility/loaders/label';\r\nimport { StyledStatistic } from './statBar.style';\r\n\r\ntype Props = {\r\n  stats: PoolData;\r\n  loading?: boolean;\r\n  poolInfo: PoolDetail;\r\n};\r\n\r\nconst Statistics: React.FC<Props> = (props: Props): JSX.Element => {\r\n  const { stats, poolInfo, loading } = props;\r\n\r\n  const { getReducedPriceLabel } = usePrice();\r\n\r\n  const liquidityValue = getReducedPriceLabel(bnOrZero(poolInfo?.poolDepth), 0);\r\n\r\n  const volume24 = getReducedPriceLabel(bnOrZero(poolInfo?.poolVolume24hr), 0);\r\n  const transaction = `${(Number(poolInfo?.swappingTxCount) || 0) +\r\n    (Number(poolInfo?.stakingTxCount) || 0)}`;\r\n\r\n  /** pool earning = poolEarned * runePrice */\r\n  const earning = getReducedPriceLabel(bnOrZero(poolInfo?.poolEarned), 0);\r\n\r\n  const totalStakers = `${stats?.totalStakers ?? '0'}`;\r\n  const totalSwaps = `${poolInfo?.swappingTxCount ?? '0'}`;\r\n\r\n  const poolAPY = bnOrZero(poolInfo?.poolAPY);\r\n  const poolAPYLabel = `${poolAPY.multipliedBy(100).toFixed(2)} %`;\r\n\r\n  const totalPoolFee = getReducedPriceLabel(\r\n    bnOrZero(poolInfo?.poolFeesTotal),\r\n    0,\r\n  );\r\n\r\n  const poolStats = React.useMemo(\r\n    () => [\r\n      {\r\n        title: 'Total Liquidity',\r\n        value: liquidityValue,\r\n      },\r\n      {\r\n        title: '24H Volume',\r\n        value: volume24,\r\n      },\r\n      {\r\n        title: 'Total Earning',\r\n        value: earning,\r\n      },\r\n      {\r\n        title: 'Total Fee',\r\n        value: totalPoolFee,\r\n      },\r\n      {\r\n        title: 'Total Members',\r\n        value: totalStakers,\r\n      },\r\n      {\r\n        title: 'Total Swaps',\r\n        value: totalSwaps,\r\n      },\r\n      {\r\n        title: 'Total Transactions',\r\n        value: transaction,\r\n      },\r\n      {\r\n        title: 'APY',\r\n        value: poolAPYLabel,\r\n      },\r\n    ],\r\n    [\r\n      liquidityValue,\r\n      earning,\r\n      volume24,\r\n      totalStakers,\r\n      totalSwaps,\r\n      transaction,\r\n      poolAPYLabel,\r\n      totalPoolFee,\r\n    ],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[16, 16]}>\r\n        {poolStats.map((statsProp, index) => (\r\n          <Col\r\n            key={index}\r\n            xs={{ span: 12 }}\r\n            sm={{ span: 12 }}\r\n            md={{ span: 12 }}\r\n            lg={{ span: 12 }}\r\n            xl={{ span: 12 }}\r\n          >\r\n            <StyledStatistic\r\n              title={statsProp.title}\r\n              formatter={() => {\r\n                if (loading) return <LabelLoader />;\r\n                return <span>{statsProp.value}</span>;\r\n              }}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\n\r\nimport { bnOrZero } from '@thorchain/asgardex-util';\r\nimport { Row, Col } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nimport usePrice from 'hooks/usePrice';\r\n\r\nimport { StatsData, NetworkInfo } from 'types/generated/midgard/api';\r\n\r\nimport LabelLoader from '../utility/loaders/label';\r\nimport { StyledStatistic } from './statBar.style';\r\n\r\ntype Props = {\r\n  stats: StatsData;\r\n  networkInfo: NetworkInfo;\r\n  loading?: boolean;\r\n};\r\n\r\nconst Statistics: React.FC<Props> = (props: Props): JSX.Element => {\r\n  const { stats, networkInfo, loading } = props;\r\n  const { getUSDPriceLabel } = usePrice();\r\n\r\n  const bondingAPYLabel = bnOrZero(networkInfo?.bondingAPY)\r\n    .multipliedBy(100)\r\n    .toFixed(2);\r\n  const liquidityAPYLabel = bnOrZero(networkInfo?.liquidityAPY)\r\n    .multipliedBy(100)\r\n    .toFixed(2);\r\n\r\n  const poolStats = React.useMemo(\r\n    () => [\r\n      {\r\n        title: 'Total Volume',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalVolume)),\r\n      },\r\n      {\r\n        title: '24H Volume',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalVolume24hr)),\r\n      },\r\n      {\r\n        title: 'Total Users',\r\n        value: stats?.totalUsers ?? '0',\r\n      },\r\n      {\r\n        title: 'Bonding APY',\r\n        value: `${bondingAPYLabel} %`,\r\n      },\r\n      {\r\n        title: 'Liquidity APY',\r\n        value: `${liquidityAPYLabel} %`,\r\n      },\r\n      {\r\n        title: 'Total Earned',\r\n        value: getUSDPriceLabel(bnOrZero(stats?.totalEarned)),\r\n      },\r\n    ],\r\n    [stats, bondingAPYLabel, liquidityAPYLabel, getUSDPriceLabel],\r\n  );\r\n\r\n  return (\r\n    <Row gutter={[16, 16]}>\r\n      {poolStats.map((statsProps, index) => (\r\n        <Col\r\n          key={index}\r\n          xs={{ span: 12 }}\r\n          sm={{ span: 12 }}\r\n          md={{ span: 8 }}\r\n          lg={{ span: 8 }}\r\n          xl={{ span: 4 }}\r\n        >\r\n          <StyledStatistic\r\n            title={statsProps.title}\r\n            formatter={() => {\r\n              if (loading) return <LabelLoader />;\r\n              return <span>{statsProps.value}</span>;\r\n            }}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import PoolStatBar from './poolStatBar';\r\nimport StatBar from './statBar';\r\n\r\nexport { PoolStatBar };\r\nexport default StatBar;\r\n","import { Pagination } from 'antd';\r\nimport styled from 'styled-components';\r\nimport { palette } from 'styled-theme';\r\n\r\nimport Label from '../../uielements/label';\r\n\r\nexport const StyledText = styled(Label)`\r\n  font-size: 14px;\r\n  color: ${palette('text', 1)};\r\n  white-space: nowrap;\r\n  text-transform: lowercase;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const StyledLinkText = styled(Label)`\r\n  margin-right: 10px;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const TransactionWrapper = styled.div`\r\n  padding: 10px 0px;\r\n`;\r\n\r\nexport const StyledPagination = styled(Pagination)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n\r\n  li {\r\n    a.ant-pagination-item-link {\r\n      transition: none;\r\n    }\r\n  }\r\n\r\n  li.ant-pagination-item.ant-pagination-item-active {\r\n    border-color: ${palette('primary', 0)};\r\n    a {\r\n      color: ${palette('primary', 0)};\r\n    }\r\n  }\r\n\r\n  li.ant-pagination-item {\r\n    background: ${palette('background', 1)};\r\n    border-color: ${palette('gray', 0)};\r\n    a {\r\n      color: ${palette('text', 0)};\r\n    }\r\n\r\n    &:hover {\r\n      border-color: ${palette('primary', 0)};\r\n      a {\r\n        color: ${palette('primary', 0)};\r\n      }\r\n    }\r\n  }\r\n\r\n  li.ant-pagination-prev,\r\n  li.ant-pagination-next {\r\n    a {\r\n      background: ${palette('background', 1)};\r\n      border-color: ${palette('gray', 0)};\r\n      color: ${palette('text', 0)};\r\n      &:hover {\r\n        border-color: ${palette('primary', 0)};\r\n        color: ${palette('primary', 0)};\r\n      }\r\n    }\r\n  }\r\n\r\n  .anticon.ant-pagination-item-link-icon {\r\n    color: ${palette('primary', 0)};\r\n  }\r\n\r\n  .ant-select-dropdown {\r\n    background: ${palette('background', 1)};\r\n    color: ${palette('text', 0)};\r\n    .ant-select-item {\r\n      color: ${palette('text', 0)};\r\n      &.ant-select-item-option-active {\r\n        background: ${palette('background', 2)};\r\n        color: ${palette('primary', 0)};\r\n      }\r\n    }\r\n  }\r\n\r\n  .ant-select.ant-pagination-options-size-changer {\r\n    .ant-select-selector {\r\n      background: ${palette('background', 1)};\r\n      border-color: ${palette('gray', 0)};\r\n      color: ${palette('text', 0)};\r\n      transition: none;\r\n    }\r\n    svg {\r\n      path {\r\n        fill: ${palette('text', 0)};\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      .ant-select-selector {\r\n        border-color: ${palette('primary', 0)};\r\n        color: ${palette('primary', 0)};\r\n      }\r\n      svg {\r\n        path {\r\n          fill: ${palette('primary', 0)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport React, { useState, useCallback, useMemo, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { LinkOutlined } from '@ant-design/icons';\r\nimport { formatBaseAsTokenAmount, baseAmount } from '@thorchain/asgardex-token';\r\nimport { Grid, Tag } from 'antd';\r\nimport { ColumnType } from 'antd/lib/table';\r\nimport moment from 'moment';\r\n\r\nimport Label from 'components/uielements/label';\r\n\r\nimport { getTx } from 'redux/midgard/actions';\r\nimport { TxDetailType } from 'redux/midgard/types';\r\nimport { getAssetFromString } from 'redux/midgard/utils';\r\nimport { RootState } from 'redux/store';\r\n\r\nimport usePrevious from 'hooks/usePrevious';\r\n\r\nimport { BINANCE_TX_BASE_URL } from 'helpers/apiHelper';\r\n\r\nimport { TX_PUBLIC_PAGE_LIMIT } from 'settings/constants';\r\n\r\nimport { FixmeType } from 'types/bepswap';\r\nimport { TxDetails, TxDetailsTypeEnum, Coin } from 'types/generated/midgard';\r\n\r\nimport Table from '../../uielements/table';\r\nimport {\r\n  StyledText,\r\n  StyledLink,\r\n  StyledLinkText,\r\n  TransactionWrapper,\r\n  StyledPagination,\r\n} from './txTable.style';\r\n\r\ntype Column = 'address' | 'date' | 'type' | 'in' | 'out';\r\n\r\nconst tags: Record<TxDetailsTypeEnum, string> = {\r\n  swap: '#2db7f5',\r\n  stake: '#87d068',\r\n  unstake: '#f50',\r\n  doubleSwap: '#2db7f5',\r\n  add: '#87d068',\r\n  refund: '#f50',\r\n  rewards: '#2db7f5',\r\n  pool: '#87d068',\r\n  gas: '#f50',\r\n};\r\n\r\ntype Props = {\r\n  address?: string;\r\n  txId?: string;\r\n  asset?: string;\r\n  type?: TxDetailType;\r\n  limit?: number;\r\n};\r\n\r\nconst TxTable: React.FC<Props> = React.memo(\r\n  (props: Props): JSX.Element => {\r\n    const { address, txId, asset, type, limit = TX_PUBLIC_PAGE_LIMIT } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const txData = useSelector((state: RootState) => state.Midgard.txData);\r\n    const txRefreshing = useSelector((state: RootState) => state.Midgard.txRefreshing);\r\n\r\n    const isDesktopView = Grid.useBreakpoint()?.lg ?? false;\r\n    const loading = txData._tag !== 'RemoteSuccess';\r\n\r\n    const [currentTxPage, setCurrentTxPage] = useState<number>(1);\r\n\r\n    useEffect(() => {\r\n      const offset = (currentTxPage - 1) * limit;\r\n\r\n      dispatch(\r\n        getTx({\r\n          address,\r\n          txId,\r\n          asset,\r\n          type,\r\n          offset,\r\n          limit,\r\n        }),\r\n      );\r\n    }, [address, txId, asset, type, limit, currentTxPage, dispatch]);\r\n\r\n    // reset filter, page after refresh\r\n    const prevRefreshTxStatus = usePrevious(txRefreshing);\r\n    useEffect(() => {\r\n      if (!txRefreshing && prevRefreshTxStatus) {\r\n        setCurrentTxPage(1);\r\n      }\r\n    }, [txRefreshing, prevRefreshTxStatus]);\r\n\r\n    const truncateAddress = useCallback((address: string) => {\r\n      if (address && address.length > 9) {\r\n        const first = address.substr(0, 6);\r\n        const last = address.substr(address.length - 3, 3);\r\n        return `${first}...${last}`;\r\n      }\r\n      return address;\r\n    }, []);\r\n\r\n    const getColumnRenderer = useCallback((): Record<\r\n      Column,\r\n      (value: FixmeType, row: TxDetails) => JSX.Element\r\n    > => {\r\n      return {\r\n        address: (_, row) => {\r\n          return (\r\n            <StyledText>{truncateAddress(row?.in?.address ?? '')}</StyledText>\r\n          );\r\n        },\r\n        type: (_, row) => {\r\n          return (\r\n            <Tag color={tags[row?.type ?? TxDetailsTypeEnum.Swap]}>\r\n              {row.type}\r\n            </Tag>\r\n          );\r\n        },\r\n        in: (_, row) => {\r\n          if (row?.type === TxDetailsTypeEnum.Unstake) {\r\n            return <StyledLinkText>N/A</StyledLinkText>;\r\n          }\r\n\r\n          const txId = row?.in?.txID;\r\n          const coins = row?.in?.coins ?? [];\r\n          let inData = '';\r\n          coins.forEach((txDetail: Coin, index: number) => {\r\n            const { asset, amount } = txDetail;\r\n            const { ticker: assetValue } = getAssetFromString(asset);\r\n            const amountValue = formatBaseAsTokenAmount(baseAmount(amount));\r\n            inData += `${assetValue}: ${amountValue}`;\r\n            if (index < coins.length - 1) inData += ' | ';\r\n          });\r\n\r\n          return (\r\n            <StyledLink\r\n              href={`${txId ? `${BINANCE_TX_BASE_URL}${txId}` : '#'}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <StyledLinkText>{inData}</StyledLinkText>\r\n              <LinkOutlined />\r\n            </StyledLink>\r\n          );\r\n        },\r\n        out: (_, row) => {\r\n          if (\r\n            row?.type === TxDetailsTypeEnum.Stake ||\r\n            row?.type === TxDetailsTypeEnum.Add\r\n          ) {\r\n            return <StyledLinkText>N/A</StyledLinkText>;\r\n          }\r\n\r\n          const txId = row?.out?.[0]?.txID ?? '';\r\n          const coins = row?.out?.[0]?.coins ?? [];\r\n          if (row?.type === TxDetailsTypeEnum.Unstake) {\r\n            coins.concat(row?.out?.[1]?.coins ?? []);\r\n          }\r\n          let outData = '';\r\n          coins.forEach((txDetail: Coin, index: number) => {\r\n            const { asset, amount } = txDetail;\r\n            const { ticker: assetValue } = getAssetFromString(asset);\r\n            const amountValue = formatBaseAsTokenAmount(baseAmount(amount));\r\n            outData += `${assetValue}: ${amountValue}`;\r\n            if (index < coins.length - 1) outData += ' | ';\r\n          });\r\n\r\n          return (\r\n            <StyledLink\r\n              href={`${txId ? `${BINANCE_TX_BASE_URL}${txId}` : '#'}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              <StyledLinkText>{outData}</StyledLinkText>\r\n              <LinkOutlined />\r\n            </StyledLink>\r\n          );\r\n        },\r\n        date: (_, row) => {\r\n          return <span>{moment((row?.date ?? 0) * 1000).fromNow()}</span>;\r\n        },\r\n      };\r\n    }, [truncateAddress]);\r\n\r\n    const columnRenders = useMemo(() => getColumnRenderer(), [\r\n      getColumnRenderer,\r\n    ]);\r\n\r\n    const addressColumn: ColumnType<TxDetails> = useMemo(\r\n      () => ({\r\n        key: 'address',\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        align: 'left',\r\n        render: columnRenders.address,\r\n      }),\r\n      [columnRenders.address],\r\n    );\r\n\r\n    const dateColumn: ColumnType<TxDetails> = useMemo(\r\n      () => ({\r\n        key: 'date',\r\n        title: 'Time',\r\n        dataIndex: 'date',\r\n        align: 'right',\r\n        render: columnRenders.date,\r\n      }),\r\n      [columnRenders.date],\r\n    );\r\n\r\n    const typeColumn: ColumnType<TxDetails> = useMemo(\r\n      () => ({\r\n        key: 'type',\r\n        title: 'type',\r\n        dataIndex: 'type',\r\n        align: 'center',\r\n        render: columnRenders.type,\r\n      }),\r\n      [columnRenders.type],\r\n    );\r\n\r\n    const inColumn: ColumnType<TxDetails> = useMemo(\r\n      () => ({\r\n        key: 'in',\r\n        title: 'In',\r\n        dataIndex: 'in',\r\n        align: 'left',\r\n        render: columnRenders.in,\r\n      }),\r\n      [columnRenders.in],\r\n    );\r\n\r\n    const outColumn: ColumnType<TxDetails> = useMemo(\r\n      () => ({\r\n        key: 'out',\r\n        title: 'Out',\r\n        dataIndex: 'out',\r\n        align: 'left',\r\n        render: columnRenders.out,\r\n      }),\r\n      [columnRenders.out],\r\n    );\r\n\r\n    const desktopColumns = useMemo(\r\n      () => [addressColumn, typeColumn, inColumn, outColumn, dateColumn],\r\n      [addressColumn, typeColumn, inColumn, outColumn, dateColumn],\r\n    );\r\n\r\n    const mobileColumns = useMemo(\r\n      () => [addressColumn, typeColumn, dateColumn],\r\n      [addressColumn, typeColumn, dateColumn],\r\n    );\r\n\r\n    return (\r\n      <TransactionWrapper>\r\n        <Label size=\"big\" color=\"primary\">\r\n          Transactions (\r\n          {txData._tag === 'RemoteSuccess' ? txData.value.count : 0})\r\n        </Label>\r\n        <Table\r\n          loading={loading}\r\n          columns={isDesktopView ? desktopColumns : mobileColumns}\r\n          dataSource={txData._tag === 'RemoteSuccess' ? txData.value.txs : []}\r\n          size=\"small\"\r\n        />\r\n        <StyledPagination\r\n          defaultCurrent={1}\r\n          current={currentTxPage}\r\n          total={txData._tag === 'RemoteSuccess' ? txData.value.count : 0}\r\n          showSizeChanger={false}\r\n          onChange={setCurrentTxPage}\r\n        />\r\n      </TransactionWrapper>\r\n    );\r\n  },\r\n);\r\n\r\nexport default TxTable;\r\n","import TxTable from './txTable';\r\n\r\nexport default TxTable;\r\n"],"sourceRoot":""}