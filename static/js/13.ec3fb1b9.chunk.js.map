{"version":3,"sources":["../node_modules/sr25519/sr25519.js"],"names":["load","module","imports","Response","WebAssembly","instantiateStreaming","headers","get","console","warn","arrayBuffer","bytes","instantiate","instance","Instance","init","input","Request","URL","fetch","wasm","exports","__wbindgen_wasm_module","default"],"mappings":"0JAEeA,E,oEAAf,WAAoBC,EAAQC,GAA5B,4EAC0B,oBAAbC,UAA2BF,aAAkBE,UAD1D,oBAEoD,oBAArCC,YAAYC,qBAF3B,0CAIqBD,YAAYC,qBAAqBJ,EAAQC,GAJ9D,2EAMmD,qBAAvCD,EAAOK,QAAQC,IAAI,gBAN/B,iBAOUC,QAAQC,KACN,oMADF,MAPV,4DAiBwBR,EAAOS,cAjB/B,eAiBUC,EAjBV,iBAkBiBP,YAAYQ,YAAYD,EAAOT,GAlBhD,kEAoB2BE,YAAYQ,YAAYX,EAAQC,GApB3D,cAoBUW,EApBV,kBAsB4BT,YAAYU,UAtBxC,0CAuBa,CAAED,WAAUZ,WAvBzB,iCAyBaY,GAzBb,0D,+BA8BeE,E,kEAAf,WAAoBC,GAApB,kFACQd,EAAU,IAGG,kBAAVc,GACa,oBAAZC,SAA0BD,aAAiBC,SACnC,oBAARC,KAAsBF,aAAiBE,OAE/CF,EAAQG,MAAMH,IARlB,KAWqChB,EAXrC,SAWgDgB,EAXhD,+BAWuDd,EAXvD,oDAWUW,EAXV,EAWUA,SAAUZ,EAXpB,EAWoBA,OAElBmB,KAAOP,EAASQ,QAChBN,EAAKO,uBAAyBrB,EAdhC,kBAgBSmB,MAhBT,6C,sBAmBAC,EAAQE,QAAUR","file":"static/js/13.ec3fb1b9.chunk.js","sourcesContent":["// Patched version of `sr25519.js` (`cosmos-client`) to run in web\r\n\r\nasync function load(module, imports) {\r\n  if (typeof Response === 'function' && module instanceof Response) {\r\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\r\n      try {\r\n        return await WebAssembly.instantiateStreaming(module, imports)\r\n      } catch (e) {\r\n        if (module.headers.get('Content-Type') !== 'application/wasm') {\r\n          console.warn(\r\n            '`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n',\r\n            e\r\n          )\r\n        } else {\r\n          throw e\r\n        }\r\n      }\r\n    }\r\n\r\n    const bytes = await module.arrayBuffer()\r\n    return await WebAssembly.instantiate(bytes, imports)\r\n  } else {\r\n    const instance = await WebAssembly.instantiate(module, imports)\r\n\r\n    if (instance instanceof WebAssembly.Instance) {\r\n      return { instance, module }\r\n    } else {\r\n      return instance\r\n    }\r\n  }\r\n}\r\n\r\nasync function init(input) {\r\n  const imports = {}\r\n\r\n  if (\r\n    typeof input === 'string' ||\r\n    (typeof Request === 'function' && input instanceof Request) ||\r\n    (typeof URL === 'function' && input instanceof URL)\r\n  ) {\r\n    input = fetch(input)\r\n  }\r\n\r\n  const { instance, module } = await load(await input, imports)\r\n\r\n  wasm = instance.exports\r\n  init.__wbindgen_wasm_module = module\r\n\r\n  return wasm\r\n}\r\n\r\nexports.default = init\r\n"],"sourceRoot":""}